/* 
* Rigoberto Castro
* Roberto Mata
* Jennifer Millan
* Delil Tursun
* Kanishq Viradiya
* 
* CS2011-01 
* 
* Description : The Slums is a text based adventure game, written in Java, set in a world where several ideas coexist.
*               The player is able to create their own unique character and take them on an adventure in the fictional city of Keji,
*               an industrial era metropolis on a remote island. A city where the buisinessmen downtown walk on polished marble floors,
*               while the people less than a kilometer away try to avoid infected needles on the streets barefoot.
*               The player can choose their character's background, whether they want to be an entrepreneur or a blue colar worker,
*               each background shows a brief story of what life is like in the city for the different types of people that live there.
*
*               Due to an outbreak of a deadly virus spread through violence, the player's character is quarantined inside of the
*               slums and its up to the player to figure a way out before things get worse. Buuuut... While they are trapped
*               inside of the slums, the player can spend their time doing a variety of activities that are common for people in the slums of Keji.
*
*               The player can:
*               - Purchase a plethora of weapons to convince those who dissagree with them.
*               - Buy armour of all kinds to protect their character from unwanted acts of aggression.
*               - Spend some time at the well with the best lads and get bonkered after a few strong cups of drink.
*               - Join a violent gang and assimilate into their group to commit crimes as a collective.
*               - Complete odd jobs to earn doubloons for a shinier knife or a bigger gun.
*               - Spend their life earnings on one hand at the Ponkler table, or in any of the 4 minigames.
*               - And of course... try to escape from the slums to achieve one of the 9 endings.
*
* Github link: https://github.com/rc115/CS2011-Final/tree/main
*
* Assignment: Text Based Adventure Game
* Project Name: The Slums
*
*           _____________
*           ___  __/__  /______
*           __  /  __  __ \  _
*           _  /   _  / / /  __/
*           /_/    /_/ /_/\___/
*                       ______             
*                      / __/ /_ ____ _  ___
*                     _\ \/ / // /  ' \(_-<
*                    /___/_/\_,_/_/_/_/___/
*
* Ascii art generated by: https://www.patorjk.com/software/taag/#p=display&f=Speed&t=The%0A%20%20slums
*
* Inspirations: Fallout 2 by Interplay, TES: Skyrim by Bethesda, Cyberpunk 2077 by CD Projekt Red, GTA: V by Rockstar (Several Open-World RPGs)
*/



import java.util.Scanner;
import java.util.Random;



public class TheSlums {

    static Scanner input = new Scanner(System.in);
    static Random rand = new Random();

    public static void main(String args[]){


        // Welcome message, also the first thing that prints to the console
        System.out.println(
            "\n"
          + "\n    Welcome to"
          + colour(
            "\n   _____________       "
            + "\n   ___  __/__  /______ "
            + "\n   __  /  __  __ \\  _ "
            + "\n   _  /   _  / / /  __/"
            + "\n   /_/    /_/ /_/\\___/ "
            + "                    "
          , "CYAN")
          + colour(
                "\n                ______                   "
            + "\n               / __/ /_ ____ _  ___      "
            + "\n              _\\ \\/ / // /  ' \\(_-<      "
            + "\n             /___/_/\\_,_/_/_/_/___/      "
          , "PURPLE")
          + "\n               Version 1.11.121324"
          + "\n" 
        );

        boolean helpMe = false;
        if(args.length != 0 && args[0].equals("-help")) {
            slowTxt("\n\nYou are in " + colour("'help'", "Green") + " mode. This wont make the game easier, but it will add hints to make it more understandable.\n\n", 100);
            helpMe = true;
        }



    // __________________________________________________ varHell __________________________________________________

        int turns = 0; // Variable for the total ammount of turns it takes the player to complete the game.

        // Character String Variables:
        String cName = "";
        String response;
        String background = "Unemployed";
        String location = "";
        String cWeapon = "Fists";
        String cDmgType = "Blunt";
        String armour = "Clothes";

        // List of Character Stats
        int[] stats = {100, 100, 1, 9, 0, 0, 5, 0};
        // Stats:
        // Health --->  stats[0]
        // MaxHealth ---> stats[1]
        // Level ---> stats[2]
        // Lives ---> stats[3]
        // Luck ---> stats[4]
        // Money ---> stats[5]
        // Damage ---> stats[6]
        // Debt ---> stats[7]

        boolean nameSet = false;
        int[] skills = new int[4];
        double[] damageMultipliers = new double[4];

        // Combat Variables
        double cDmgRes = 0.5;

        // Quest Variables
        String[] quest = new String[10];
        boolean[] questComplete = new boolean[10];

        // Reputation variables (a group/gang will attack the character if their reputation is too low)
        // These should also be able to fit in a list I just wanted to visualize it better
        int govRep = 0;
        // Gangs (names can change)
        int stabbasRep = 0;
        int shoottasRep = 0;
        boolean isRat = false;

        // Faces for talkingCats() Methods
        // final String[] TEMPLATE = {
        //     "      ____________    ",
        //     "     /            \\   ",
        //     "    |   o     o   |   ",
        //     "    |      b      |   ",
        //     "    |     ___     |   ",
        //     "    \\____________/    "
        // };

        final String[] L_CLOSED = {
            "       /\\      /\\     ",
            "      /  \\____/  \\    ",
            "     /  _     _   \\   ",
            "    |   o     o   |   ",
            "    |      >      |   ",
            "    |     ___     |   ",
            "    \\____________/    "
        };

        final String[] L_OPEN = {
            "       /\\      /\\     ",
            "      /  \\____/  \\    ",
            "     /  _     _   \\   ",
            "    |   o     o   |   ",
            "    |      >      |   ",
            "    |      O      |   ",
            "    \\____________/    "
        };

        final String[] I_OPEN = {
            "       /\\      /\\     ",
            "      "+colour("/", "red")+"  \\____/  \\    ",
            "     /  _     _   \\   ",
            "    |"+colour(".", "red")+"  o     o  "+colour(".", "red")+"|   ",
            "    "+colour("| ..", "red")+"   >      |   ",
            "    "+colour("|..", "red")+"    O   "+colour(".", "red")+"  |   ",
            "    \\_"+colour(".", "red")+"_"+colour(".", "red")+"________/    "
        };

        final String[] I_CLOSED = {
            "       /\\      /\\     ",
            "      "+colour("/", "red")+"  \\____/  \\    ",
            "     /  _     _   \\   ",
            "    |"+colour(".", "red")+"  o     o  "+colour(".", "red")+"|   ",
            "    "+colour("| ..", "red")+"   >      |   ",
            "    "+colour("|..", "red")+"   ___  "+colour(".", "red")+"  |   ",
            "    \\_"+colour(".", "red")+"_"+colour(".", "red")+"________/    "
        };

        final String[] SLEEP = {
            "       /\\      /\\     ",
            "      /  \\____/  \\    ",
            "     /            \\   ",
            "    |  __     __  |   ",
            "    |      v      |   ",
            "    |     ___     |   ",
            "    \\____________/    "
        };

        final String[] BLUSH = {
            "       /\\      /\\     ",
            "      /  \\____/  \\    ",
            "     /  _     _   \\   ",
            "    |   >     <   |   ",
            "    |  ... v ...  |   ",
            "    |    -_-_-    |   ",
            "    \\____________/    "
        };

        final String[] SMOL = {
            "       /\\      /\\     ",
            "      /  \\____/  \\    ",
            "     /            \\   ",
            "    |             |   ",
            "    |        . .  |   ",
            "    |        __   |   ",
            "    \\____________/    "
        };

        final String[] FED = {
            "       /\\      /\\     ",
            " _____/__\\____/__\\    ",
            "     /            \\   ",
            "    |   U     U   |   ",
            "    |      <      |   ",
            "    |     ...     |   ",
            "    \\____________/    "
        };

        boolean infected = false;
        boolean orbs = false; // Quest variable for unlockable drink
        boolean contract = false;

    // __________________________________________________  varHell __________________________________________________



    // __________________________________________________ Character Creator __________________________________________________

        if (helpMe)
            slowTxt("\nEnter the name you would like to be reffered to as in-game.\n", 100);
        // While loop runs until player chooses character's name
        while (!nameSet) {
            System.out.println("\n____________________________________________________________________________________________________\n");
            System.out.print("What is your character's name: ");
    
            String newName = input.nextLine(); // Takes player's input for character's name
            cName = newName;
    
            System.out.println("\n" + colour(cName, "GREEN") + " will be your character's name throuout the game.\n"
                + "\n1. Confirm name\n2. Change name\n"
            );
    
            switch (playerSelection()) {
                case "2":
                    System.out.print("Clearing name...");
                    input.nextLine(); // Clears input to make room for new name
                    break;
                default: nameSet = true;
            }
        }

        if (helpMe) {
            slowTxt("Your characters skills determine things like chances for success.\n", 100);
            slowTxt("A balanced character is recommended for beginners (10 on each and +10 on any).", 100);
        }
        skills = setSkills(skills);

        if (helpMe) {
            slowTxt("\nYour characters damage multipliers determine how much damage you do with that type of weapon.\n", 100);
            slowTxt("\nFor example: A baseball bat does 11 blunt damage,\n", 100);
            slowTxt(" \nbut a 0.0 multiplier in blunt will make it do 0 damage, and a 1.5 mult will do 16 damage.\n", 100);
        }
        damageMultipliers = setDamageMultipliers(damageMultipliers);

        if (helpMe) {
            slowTxt("This tutorial will hopefully help you navigate the slums successfully...\n", 100);
            pause(300);
            slowTxt(
                "There are two types of player choices in this game...\n\n"
            +   "Number-based choices (EX: 1. Choice 1, 2. Choice 2)\n\n"
            +   "Text box entries (EX: Enter something after the colon: {Player Input goes here})\n\n"
            , 100);
            pause(300);
            slowTxt("You can sometimes enter choices not available to the player...\n", 100);
            slowTxt("Or you can just enter 'exit' to quit the game at any moment.", 100);
            clearConsole(300);
            slowTxt("Combat Tutorial...\n\n", 100);
            slowTxt("Fighting enemies in the slums is as easy as rolling a dice...\n\n", 100);
            slowTxt(
                "Because thats kind of what happens to determine if a hit makes contact,\n"
            +   "If "+cName+" or enemy roll a 10 or higher the attack hits.\n"
            +   "This keeps happening until the enemy is dead or "+cName+" runs out of lives.\n"
            +   cName + " has 9 lives, because   , once they are all gone the game ends.\n\n"
            +   "There is also a alternate combat method for 1 versus 3 fights and 2 versus 3 fights.\n"
            +   "All other fights are one-on-one and are either win or run away."
            , 100);
            clearConsole(500);

            slowTxt("Would you like to practice fighting?\nNote: Your lives will not be lost here.\n\n", 100);

            slowTxt("Type 'Sure' Or '1' to fight Sackary the fighting bag: ", 100);

            response = playerSelection();
            if (response.equals("Sure") || response.equals("1")) {
                final int[] TEMP_STATS = stats;
                combat(cName, TEMP_STATS, 1.0, "Sharp", skills, damageMultipliers, "Sackary", 100, 10);

                clearConsole(500);
                slowTxt(
                    cName + " was using a 'Sharp' weapon, if your damage multiplier was too low it might have been harder to defeat that enemy.\n"
                +   "This applies to all weapons, if your damage mults are heavy to one weapon consider using that type more often.\n", 100);
            } else {
                clearConsole(500);
                slowTxt("Tutorial Complete! Good Luck!\n", 100);
                clearConsole(200);
            }
        }

        System.out.println("\n____________________________________________________________________________________________________\n");
        System.out.print("Choose your character's background:\n");
        System.out.println("\n1. Sushi Chef\n2. Steel Worker\n3. Farmer\n4. Catnip Dealer\n5. CEO\n");
    
        switch (playerSelection()) {
            case "1":
                background = "Sushi";
                break;
            case "2":
                background = "Steel";
                break;
            case "3":
                background = "Farmer";
                break;
            case "4":
                background = "Dealer";
                break;
            case "5":
                background = "CEO";
                break;
            default:
                background = "Unemployed";
        }

        if (background.equals("Sushi")) {
            skills[1] += 10;
            stats[5] = 100;
            cWeapon = "Cleaver";
            stats[6] = 11;
            cDmgType = "Sharp";
        } else if (background.equals("Steel")) {
            skills[0] += 10;
            stats[5] = 250;
            cWeapon = "Steel Pipe";
            stats[6] = 10;
        } else if (background.equals("Farmer")) {
            skills[2] += 10;
            stats[5] = 50;
            cWeapon = "Pesticide Sprayer";
            stats[6] = 8;
            cDmgType = "Elemental";
        } else if (background.equals("Dealer")) {
            skills[3] += 10;
            stats[5] = 50;
            cWeapon = "9mm";
            stats[6] = 9;
            cDmgType = "Ranged";
        } else if (background.equals("CEO")) {
            stats[4] = 1;
            stats[5] = 10000;
        }

        clearConsole(1000);

        // Debugging character
        if (cName.equals("D. Bugger")) {
            skills[0] = 100;
            skills[1] = 100;
            skills[2] = 100;
            skills[3] = 100;
            damageMultipliers[0] = 3.0;
            damageMultipliers[1] = 3.0;
            damageMultipliers[2] = 3.0;
            damageMultipliers[3] = 3.0;
            stats[5] = 1000000;
            stats[4] = 10;
            cWeapon = "Dragonn KLR 20mm Anti-Matiriel Rifle";
            stats[6] = 100;
            cDmgType = "Ranged";
            armour = "T-Shirt and Jorts";
            cDmgRes = 3.0;
            System.out.println(cName + " ready.");
        }



// __________________________________________________ Backgrounds/Prologue __________________________________________________

    //This section just sets the background for why they end up in the slums of Keji

        clearConsole(0);

        // Loading message to catch player's attention
        String[] loadingMsg = { 
            "   __                 _ _             \n" +
            "  / /  ___   __ _  __| (_)_ __   __ _ \n" +
            " / /  / _ \\ / _` |/ _` | | '_ \\ / _` |\n" +
            "/ /__| (_) | (_| | (_| | | | | | (_| |\n" +
            "\\____/\\___/ \\__,_|\\__,_|_|_| |_|\\__, |\n" +
            "                                |___/ ",

            "   o   ",
            "o   ",
            "o   ",
            "o   ",
            "o"

        };

        for (String loading : loadingMsg) { 
            System.out.print(colour(loading, "CYAN"));
            pause(680);
        }

        clearConsole(1000);

        // Sets a custom start and location based on player's choice of job
        if (background.equals("Sushi")) { // Sushi background by Jennifer
            // Sushi background by Jennifer
            slowTxt(
            "The slums buzz with their usual chaos: street vendors hawking questionable goods, children weaving through the shadows,\n" +
            "and the air thick with the greasy tang of desperation. Amid the commotion, a sushi chef walks in, cutting a striking figure\n" +
            "in his crisp white uniform, neatly tied apron, and a polished knife kit slung over his shoulder. He makes his way to a\n" +
            "run-down fish stall, where an elderly vendor methodically cleans a bucket of dubious-looking fish. Nearby, a young bystander\n" +
            "lingers, watching the scene unfold with a mix of curiosity and suspicion.\n", 50);

            clearConsole(500);
            leftTalkingCats();
            isSpeaking("Sushi Chef", "(Bowing slightly) Good evening. I hear you're the one to talk to for fresh fish?\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking("Fish vendor", "(Frowning, then laughing hoarsely) Fresh? Hah! You've got the wrong neighborhood for that, my friend. What I've got is cheap. Are you sure that's what you're after, chef?\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking("Sushi chef", "Cheap works. I'm not after flavor or quality-just something to practice with.\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking("Fish vendor", "(Leaning forward, curious)  Practice? With this? You'd get better results slicing up cardboard.\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking("Sushi chef", "(With a faint smile) Cardboard doesn't have bones, scales, or the delicate texture of real flesh. Even flawed fish has its lessons to offer.\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking("Fish vendor", "(Chucking) Lessons, you say? Alright, I like your style. So, what's your offer?\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking("Sushi chef", "(Takes out some cash(or whatever currency) Enough for what you'd call a \"lesson.\" I'll take whatever you've got left at the end of the day.\n");

            clearConsole(1000);
            slowTxt("\nAs the exchange continues, the young bystander inches closer, casting a wary eye on the chef.\n\n", 100);

            clearConsole(500);
            talkingCats(L_CLOSED, I_OPEN);
            isSpeaking("Bystander", "(Snapping) Why're you really here? We've seen your type before. You come down from the fancy districts to take what's cheap, leave us with nothing.");

            clearConsole(500);
            talkingCats(L_OPEN, I_CLOSED);
            isSpeaking("Sushi chef", "I'm here because I respect the craft. Every piece of fish, no matter its source, has something to offer. But don't worry-the fish you're serving is safe. What I'm taking? It's not fit for anyone's palette.\n");

            clearConsole(500);
            talkingCats(L_CLOSED, I_OPEN);
            isSpeaking("Bystander", "(Frowning) So, what? You're doing us a favor?\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking("Sushi chef", "(Pausing, choosing words carefully) It's not a favor-it's a trade. I get to sharpen my skills on what others would throw away, and the vendor gets paid for what would otherwise go to waste. Tell me, doesn't that sound fair?\n");

            clearConsole(500);
            talkingCats(L_CLOSED, I_OPEN);
            isSpeaking("Bystander", "(Still suspicious) Maybe. But what if someone here needs that fish? Even bad fish is better than going hungry.\n");

            clearConsole(500);
            talkingCats(L_OPEN, I_CLOSED);
            isSpeaking("Fish vendor", "(Snorting) Kid, do you have any idea what this fish would do to someone if they ate it raw? The chef's got a point-it's safer in his hands than on our plates.\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking("Sushi chef", "(Turning back to vendor) Thanks. I'll see you around once I've honed my skills with it.\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking("Fish vendor", "(Nodding as he hands over a bag of fish) Alright, chef, it's yours. But here's the deal-next time, bring some of that fancy sushi you're perfecting. Let the people here get a taste of the good life, even if just for a moment.\n");

            clearConsole(1000);
            slowTxt("\nThe chef gathers the fish and strides away, eager to refine his craft and sharpen his skills.\n", 100);

            clearConsole(1000);
            slowTxt("\nUnfortunately...\n", 130);

            clearConsole(500);
            slowTxt("\nThe sushi chef, " + cName + ", was stopped at a checkpoint while trying to leave.", 70);
            clearConsole(1500);
            // Sushi background by Jennifer
        } else if (background.equals("Steel")) { // Steel background by Rigo
            // Steel background by Rigo
            slowTxt(cName + " is a steel factory worker.\n\n\n", 100);

            final String[] LARRY_CLOSED = {
                "       /\\      /\\     ",
                "      /  \\____/  \\    ",
                "     /            \\   ",
                "    |   x     o   |   ",
                "    |      <      |   ",
                "    |     ___     |   ",
                "    \\____________/    "
            };

            final String[] LARRY_OPEN = {
                "       /\\      /\\     ",
                "      /  \\____/  \\    ",
                "     /            \\   ",
                "    |   x     o   |   ",
                "    |      <      |   ",
                "    |      o      |   ",
                "    \\____________/    "
            };

            boolean invited = false;

            talkingCats(L_CLOSED, LARRY_OPEN);
            isSpeaking(colour("Larry", "Purple"), "'Ey " + cName + ", you hear the game over the radio yesterday?\n");

            clearConsole(500);
            talkingCats(L_OPEN, LARRY_CLOSED);
            System.out.print(colour(cName, "Green") + ": ");
            response = playerSelection();

            int pissedOffL = 0;
            if (response.contains("ye") || response.contains("Ye")) {
                pissedOffL -= 1;
                isSpeaking(colour("\nLarry", "Blue"), "Pretty good right.\n");

                clearConsole(400);
                talkingCats(L_OPEN, LARRY_CLOSED);
                System.out.print(colour(cName, "Green") + ": ");
                response = playerSelection();
    
                clearConsole(500);
                talkingCats(L_CLOSED, LARRY_OPEN);

                if (response.contains("ye") || response.contains("Ye")) {
                    pissedOffL += 2;
                    isSpeaking(colour("\nLarry", "Purple"), "Hmph. Right.\n");
                } else if (response.contains("no") || response.contains("No") || response.contains("nah") || response.contains("Nah")) {
                    pissedOffL -= 1;
                    isSpeaking(colour("\nLarry", "Blue"), "Exactly. Was ass but nobody admits it.\n");
                } else {
                    pissedOffL += 1;
                    isSpeaking(colour("\nLarry", "Purple"), "Sure bud.\n");
                }
            } else {
                pissedOffL += 1;
                clearConsole(500);
                talkingCats(L_CLOSED, LARRY_OPEN);
                isSpeaking(colour("\nLarry", "Purple"), "Was shit anyway. What did you do then?\n");

                clearConsole(2000);
                talkingCats(L_OPEN, LARRY_CLOSED);                
                System.out.print(colour(cName, "Green") + ": ");
                response = playerSelection();

                if (response.contains("drink") || response.contains("gambl") || response.contains("Jorkin It")) {
                    pissedOffL -= 3;
                    clearConsole(500);
                    talkingCats(L_CLOSED, LARRY_OPEN);
                    isSpeaking(colour("\nLarry", "Blue"), "Hell yeah! You're not that bad then.\n");

                    if (response.contains("drink")) {
                        isSpeaking(colour("\nLarry", "Blue"), "Ohh you drink yea? Me and the lads are going to the pub after the last shift.\n"
                        + "Why dont you stay for a few hours after you're out and come with us.\n");
                        isSpeaking(colour(cName, "Green"), "Sure\n");
                        invited = true;
                    }

                    if (response.contains("gambl")) {
                        isSpeaking(colour("\nLarry", "Blue"), "Do you wanna roll some dice?.\n");

                        clearConsole(2000);
                        talkingCats(L_OPEN, LARRY_CLOSED);
                        slowTxt("\n1. \"" + colour(cName, "Green") + ": Sure\"\n2. \"" + colour(cName, "Green") + ": No thanks\"\n\n", 100);

                        switch (playerSelection()) {
                            case "1":
                                isSpeaking(colour("\n" + cName, "Green"), "Sure how do I play?\n");

                                clearConsole(2000);
                                talkingCats(L_CLOSED, LARRY_OPEN);
                                isSpeaking(colour("\nLarry", "Blue"), "Just put a bet in and if you match 2 or all 3 of your dice you win.\n"
                                    + "If you win you get two to three times your bet,\n"
                                    + "unless your opponent has matching dice too.\n"
                                    + "If your opponent has a higher bet than you, you have to pay a 15 doubloon fee.\n"
                                    + "To end it, just put in 0 as a bet or lose all your money.\n"
                                );

                                clearConsole(3000);
                                talkingCats(L_OPEN, LARRY_CLOSED);
                                isSpeaking(colour(cName, "Green"), "Uhh...\n");

                                clearConsole(1000);
                                talkingCats(L_CLOSED, LARRY_OPEN);
                                isSpeaking(colour("\nLarry", "Blue"), "Alright. How much are you betting, whatever you bet Ill match.\n\n");
                                int bet = 0;
                                boolean validBet = false;

                                System.out.println(cName + "'s money: " + stats[5]);
                                do {
                                    System.out.print("\nBet: ");
                                    if (input.hasNextInt()) {
                                        bet = input.nextInt();
                                        if (bet > stats[5]) {
                                            System.out.println("\n\nYou cant bet more than " + stats[5] + " doubloons!\n\n");
                                            bet = 0;
                                            input.nextLine();
                                        } else {
                                            clearConsole(2000);
                                            talkingCats(L_CLOSED, LARRY_OPEN);
                                            isSpeaking(colour("\nLarry", "Blue"), "Alright then. Ill put in " + bet + " as well.");
                                            stats[5] -= bet;
                                            validBet = true;
                                        }
                                    } else {
                                        System.out.println("\n\nThat's not a valid bet!\n\n");
                                        input.nextLine();
                                    }    
                                } while (!validBet);

                                stats[5] += dice(cName, bet, "Larry", bet);
                                System.out.println("\n" + cName + "'s money: " + stats[5] + "\n\n");

                                clearConsole(2000);
                                talkingCats(L_CLOSED, LARRY_OPEN);
                                isSpeaking(colour("\nLarry", "Blue"), "That was alright. I've been in games that last over 5 hours!\n\n");

                                clearConsole(2000);
                                talkingCats(L_OPEN, LARRY_CLOSED);
                                System.out.print(colour(cName, "Green") + ": ");
                                response = playerSelection();
                    
                                if (response.contains("eat shit") && response.contains("die") || response.contains("kys") || response.contains("fuck you") || response.contains("Fuck you")) {
                                    clearConsole(100);
                                    System.out.println(colour(cName, "Green") + ": " + response);

                                    clearConsole(2000);
                                    talkingCats(L_CLOSED, LARRY_OPEN);
                                    isSpeaking(colour("\nLarry", "red"), "That aint right... Ive been nothing but nice,\n"
                                    + "and then you tell me \"" + response + "\"..."
                                    + "\n\n");

                                    slowTxt("Larry clobbered " + cName + " with a steel pipe.\n\n", 200);
                                    pissedOffL += 10;
                                    int larHitChance = rand.nextInt(4);

                                    if (larHitChance == 3) {
                                        stats[1] -= 60;
                                        stats[0] -= 86;
                                        slowTxt(cName + " got brain damage!\nThey might be squishier from now on...\n\n", 100);
                                    } else if (larHitChance == 0) {
                                        slowTxt("But Larry missed.\n\n", 100);
                                    } else {
                                        stats[0] -= 86;
                                        slowTxt(cName + " did 86 damage!\n\n", 100);
                                    }

                                }
                                break;
                            default:
                                pissedOffL += 5;
                                clearConsole(300);
                                talkingCats(L_OPEN, LARRY_CLOSED);
                                isSpeaking(colour("\n" + cName, "Green"), "Fuck NO! Larry. I don't want to play your silly games. Get back to work.\n");

                                clearConsole(2000);
                                talkingCats(L_CLOSED, LARRY_OPEN);
                                isSpeaking(colour("Larry", "Red"), "Well you didnt have to be rude about it.\n");
                        }
                    }
                } else {
                    pissedOffL += 1;
                    clearConsole(500);
                    talkingCats(L_CLOSED, LARRY_OPEN);
                    isSpeaking(colour("\nLarry", "Red"), "Bit boring.\n");
                }
            }

            clearConsole(500);
            slowTxt("\n" + cName + " went on a 30 minute break...", 100);

            clearConsole(500);
            if (pissedOffL < 0) {
                talkingCats(L_CLOSED, LARRY_OPEN);
                isSpeaking(colour("\nLarry", "Blue"), "Haven't noticed you during my lunch. You part of the new shift?\n");

                clearConsole(500);
                talkingCats(L_OPEN, LARRY_CLOSED);
                isSpeaking(colour(cName, "Green"), "Yeah... Get paid 2 doubloons per day more like this.");

                clearConsole(400);
                talkingCats(L_CLOSED, LARRY_OPEN);
                isSpeaking(colour("\nLarry", "Blue"), "Hmm. You smoke nip?\n");

                clearConsole(500);
                talkingCats(L_OPEN, LARRY_CLOSED);
                System.out.print(colour(cName, "Green") + ": ");
                response = playerSelection();
    
                if (response.contains("ye") || response.contains("Ye")) {
                    isSpeaking(colour("\nLarry", "Blue"), "That wont do. You should take this twice a day.\n");

                    slowTxt("\nLarry hands "+ cName +" a strange looking object...\n", 120);
                    slowTxt("\n1. Take it\n2. Pass\n3. Report Larry\n", 30);

                    switch (playerSelection()) {
                        case "1":
                            pissedOffL += 2;

                            final String[] LARRY_TRIPPING = {
                                "       7\\      7\\     ",
                                "      7  \\----7  \\    ",
                                "     7            \\   ",
                                "    !   k     &   !   ",
                                "    !      ?      !   ",
                                "    !      w      !   ",
                                "    \\------------7    "
                            };
                    
                            final String[] K_TRIPPING = {
                                "       7\\             ",
                                "      7  \\________    ",
                                "     7         \\  \\   ",
                                "    !   @     @ \\/!   ",
                                "    !      )      !   ",
                                "    !    ~~~      !   ",
                                "    \\____________7    "
                            };

                            slowTxt(cName + " took a hit off the wand of everlasting confusion...\n\n", 100);
                            
                            talkingCats(K_TRIPPING, LARRY_TRIPPING);
                            isSpeaking(colour(cName, "Green"), "W-what is that?\n");

                            clearConsole(300);
                            talkingCats(K_TRIPPING, LARRY_TRIPPING);
                            isSpeaking(colour("Larry", "Blue"), "\u2502\u250C\u2510\u2502\u2502\u250C\u2510\u250C\u2510\u250C\u2510\n");
                            
                            clearConsole(300);
                            talkingCats(K_TRIPPING, LARRY_TRIPPING);
                            isSpeaking(colour(cName, "Green"), "Huh\n");
                            
                            clearConsole(300);
                            talkingCats(K_TRIPPING, LARRY_TRIPPING);
                            isSpeaking(colour("Larry", "Blue"), "You're the type to take candy from strangers aren't you...\n");
                            break;
                        case "2":
                            pissedOffL -= 2;
                            isSpeaking(colour("Larry", "Blue"), "Smart. I dunno whats in that.\n");
                            break;
                        case "3":
                            pissedOffL += 5;
                            isSpeaking(colour("Larry", "Blue"), "You're gonna fucking what mate?!\n");
                            stats[0] -= 50;
                            slowTxt("\n" + cName + " got clobbered by Larry and lost 50 health!", 100);
                            break;
                        default:
                            slowTxt("\n"+cName+" dropped the yoinky and it broke!\n", 30);
                            isSpeaking(colour("\nLarry", "Red"), "You nincompoop! That cost me 400 doubloons!\n");
                            pissedOffL += 5;
                    }
                } else {
                    isSpeaking(colour("\nLarry", "Blue"), "I didn't have none anyway.\n");
                }

                if (pissedOffL <= 0) {
                    clearConsole(400);
                    talkingCats(L_CLOSED, LARRY_OPEN);
                    isSpeaking(colour("\nLarry", "Blue"), "Anyway... You seem like a chill guy.\nMe and the lads are heading to the pub later.\nWhy dont you join us after you're shift?");

                    clearConsole(2000);
                    talkingCats(L_OPEN, LARRY_CLOSED);                
                    System.out.print(colour(cName, "Green") + ": ");
                    response = playerSelection();
                    System.out.println("");
                    clearConsole(1000);

                    if (response.contains("Ye") || response.contains("ye") || response.contains("Su") || response.contains("su") || response.contains("Al") || response.contains("al")) {
                        invited = true;
                    }

                    clearConsole(400);
                    talkingCats(L_CLOSED, LARRY_OPEN);
                    isSpeaking(colour("\nLarry", "Blue"), "A'right then. Ill see you later.");
                } else {
                    clearConsole(400);
                    talkingCats(SMOL, LARRY_OPEN);
                    isSpeaking(colour("\nLarry", "red"), "You're not that interesting. Im going back to work.");

                    clearConsole(400);
                    talkingCats(SMOL, LARRY_CLOSED);
                    isSpeaking(colour("\n" + cName, "Green"), "Huh...\n");                    
                }
            } else if (pissedOffL > 0) {
                slowTxt(cName + " saw Larry in the cafeteria and tried to start a conversation...\n\n", 100);
                talkingCats(L_CLOSED, LARRY_OPEN);
                isSpeaking(colour("\nLarry", "Red"), "My break is over. I have to head back to work.\n");
            }

            clearConsole(1000);
            System.out.println("\n" + cName + "'s shift ended...");


            if (invited) {
                slowTxt("\n" + cName + " was invited to the pub.", 100);

                System.out.println("\n\n1. Go to the pub\n2. Go home\n");
                pause(200);

                switch (playerSelection()) {
                    case "1":
                        slowTxt(cName + " went to Tetanus Tapwater with the lads...", 100);
                        clearConsole(500);
                        talkingCats(SMOL, LARRY_OPEN);
                        isSpeaking(colour("\nLarry", "blue"), "Oi Garry, ya gobswallop. This is " + cName + ", met them in my last shift.");

                        final String[] GARRY = {
                            "       /\\      /\\     ",
                            "      /  \\____/  \\    ",
                            "     /            \\   ",
                            "    |--(G)-_-(G)--|   ",
                            "    |      g      |   ",
                            "    |          3  |   ",
                            "    \\____________/    "
                        };

                        clearConsole(500);
                        talkingCats(L_CLOSED, GARRY);
                        isSpeaking(colour("\nGarry", "purple"), "Good evenin', " + cName + " how many orbs can you gunder?\n");

                        clearConsole(500);
                        talkingCats(L_OPEN, GARRY);
                        System.out.print(colour(cName, "Green") + ": ");
                        response = playerSelection();

                        clearConsole(500);
                        talkingCats(SMOL, GARRY);
                        if (response.contains("what") || response.contains("huh") || response.contains("What") || response.contains("I do not understand") || response.contains("excuse me")) {
                            slowTxt("\n\nGarry pulled out a huge... ", 150);
                            slowTxt("bottle of gin.\n", 100);
                        } else { isSpeaking(colour("\nGarry", "Purple"), "Nah.\n"); }
                        isSpeaking(colour("\nGarry", "Purple"), "Hey Harry! Come gunder this orb and show " + cName + " how its done.");

                        final String[] HARRY = {
                            "       __       /\\     ",
                            "      /  \\____/  \\    ",
                            "     /            \\   ",
                            "    |  __     __  |   ",
                            "    |      H      |   ",
                            "    |    -___     |   ",
                            "    \\____________/    "
                        };

                        clearConsole(500);
                        talkingCats(GARRY, HARRY);
                        isSpeaking(colour("\nHarry", "purple"), "You gotta stop calling it that man... It sounds weird.\n");

                        clearConsole(500);
                        talkingCats(GARRY, HARRY);
                        isSpeaking(colour("\nGarry", "purple"), "Just drink it.\n");

                        slowTxt("\nHarry drank an entire 1 gallon orb of gin.\n", 120);
                        clearConsole(300);
                        slowTxt("\nGarry bought another bottle and handed it to Larry.\n", 100);

                        clearConsole(500);
                        talkingCats(GARRY, HARRY);
                        isSpeaking(colour("\nGarry", "purple"), "Here you go Larold.\n");

                        clearConsole(500);
                        talkingCats(GARRY, LARRY_OPEN);
                        isSpeaking(colour("\nLarry", "blue"), "Call me that again and I'll clob ya.\n");

                        slowTxt("\nLarry drank the other gallon of gin... Then Garry... Then it was " + cName + "'s turn...\n", 100);

                        System.out.println("\n1. Gunder the Orb of Liquid\n2. Drink something different\n3. Go home\n");
                        response = playerSelection();

                        if (playerSelection().equals("1")) {
                            slowTxt(cName + " drank the entire gallon and instantly passed out.", 100);
                            clearConsole(500);
                            talkingCats(SLEEP, GARRY);
                            isSpeaking(colour("\nGarry", "blue"), "Oof at least 1 is a easy record to beat.\n");
                            clearConsole(500);
                            orbs = true;
                        } else if (playerSelection().equals("2")) {
                            slowTxt(cName + " spent the rest of the night drinking with the Larry, Garry, and Harry.", 100);
                        } else {
                            slowTxt(" got up and went home.", 120);
                            clearConsole(500);
                            talkingCats(GARRY, LARRY_CLOSED);
                            isSpeaking(colour("\nGarry", "red"), "Knew they was a globber.\n");
                            clearConsole(500);
                        }
                        break;
                    default: slowTxt(cName + " decided not to go and went home instead.", 100); 
                }
            } else {
                clearConsole(500);
                slowTxt(cName + " went home and got ready for work the next day.", 100);
            }

            // Steel background written by Rigo
        } else if (background.equals("Farmer")) { // Farmer background by Roberto
            // Farmer background by Roberto

            System.out.println(cName + " travels to the slums seeking new customers and better trade than they're used to in the villages surrounding the farm.\n" +
                "Upon arrival in the slums, " + cName + " finds the perfect spot in a dank, square plaza. It was still early, but there was potential for increased foot traffic later in the day.\n" +
                "The slums are dirty, and the smells are putrid. Though it looks like a horrid place for business, there were enough people to appreciate the low prices and C-tier vegetables you brought.\n\n");

            slowTxt("A few hours pass...\n\n", 130);
             
            isSpeaking (cName, "Get yer fresh veggies, straight from the dirt!!\n");
            isSpeaking (cName, "Ain't no better deals for miles 'round these parts!\n\n");
            
            // *skill check minigame influences good sales or not
            // 3 rounds, if all three are passed, +200 money
            // Else, +100 money
            clearConsole(300);
            slowTxt("...\n\n", 300);
            isSpeaking(cName, "Yikes... sales here're worse than any town I've ever been to.\n\n");
            
            slowTxt("You heard stories of farmers coming to the slums and getting enough to sustain themselves for at least the week.\n\n", 100);
            
            slowTxt("The people whisper about the latest to fall ill to an unknown virus."
            + "You'd better pay special attention to cleanliness today.\n\n"
            , 100);

            clearConsole(300);
            slowTxt("You also notice a man draped from head to toe... asking for all of the attention and no attention at the same time.\n", 100);
            
            isSpeaking ("Stranger", "...\n");
            System.out.println("\n1. Suspicious\n2. Dismissive\n");

            switch (playerSelection()) {
                case"1":
                    clearConsole(300);
                    isSpeaking (cName, "Who're you, and what're you doin' skulkin' 'round here?\n");
                    isSpeaking("Stranger", "*chuckles* Good instincts, farmer. You should take it easy... You're not from here are you? How 'bout I show you around?\n");
                    //(No change in reputation)
                    break;
                default: 
                    isSpeaking(cName, "I ain't in the mood to be dealin' with ya right now.\n");
                    isSpeaking("Stranger", "Well whether you like it or not, " +
                        "you're not from here, and you're struggling. You're " +
                        "going to need my help.\n");
                    //(Maybe this choice could piss the stranger off like larry)
            }

            leftTalkingCats();
            isSpeaking (cName, "*You finish packing your cart* You're right. I ain't from 'round here, but I don't need your help.\n");
            rightTalkingCats();
            isSpeaking ("Stranger", "You hardly have enough money to last yourself the week. The people have no money. You'd better get used to that.\n");
            leftTalkingCats();
            isSpeaking(cName, "*Curiously* Me? Get used to this? Why? What's goin' on here? This place sure ain't like the stories I heard.\n");
            rightTalkingCats();
            isSpeaking ("Stranger", "Well, I'd tell you... if you let me hitch a ride with you!\n");
            leftTalkingCats();
            isSpeaking (cName, "I don't know about you, but I'm heading back home.\n");
            rightTalkingCats();
            isSpeaking ("Stranger", "Take me with you!\n");
            leftTalkingCats();
            isSpeaking (cName, "You don't even know where I'm going!\n");
            rightTalkingCats();
            isSpeaking ("Stranger", "Well, about anywhere is better than this dump. Besides, I've been hearing some talk around town. Something nasty's\n"
            + "brewing. I'd hate to be here when it boils over...\n");
            leftTalkingCats();
            isSpeaking (cName, "I think that's the least of my concerns. Plus, I don't know you, and you don't know me. Why should I trust the likes of you?\n");
            rightTalkingCats();
            isSpeaking ("Stranger", "C'mon, don't make me beg farmer, get me outta here!\n");

            System.out.println("\n1. Accept\n2. Decline\n");
            
            if (playerSelection().equals("1")) {
                clearConsole(300);
                leftTalkingCats();
                isSpeaking (cName, "What the hell, why not...\n\n");
                slowTxt("The stranger jumps on your cart and you ride back to town.\n\n", 100);
                slowTxt("You notice a cloud of dust rapidly approaching your cart. The stranger seems to have noticed as well.\n\n", 100);
                leftTalkingCats();
                isSpeaking (cName, "We should be arriving soon. What's your plan now?\n");
                rightTalkingCats();
                isSpeaking ("Stranger", "Mind your business, farmer, it'll do you well! And here, thanks for the ride.\n\n");

                slowTxt("The stranger hands " + cName + " a small bag.\n", 100);
                stats[5] += 200;
                leftTalkingCats();
                isSpeaking (cName, "I'll keep that in mind, partner\n");
                slowTxt("As you ride back, you notice the stranger looking over his shoulder. He's running from something... but you mind your business...\n", 100);
                slowTxt("Before you know it, the cloud encapsulates your cart. A shadow springs into the air, eclipsing the sun as " + "it lunges at you with a club.\n", 100);
                slowTxt("You brace yourself grabbing your trusty " + cWeapon + " to defend yourself!\n", 100);
                //(combat stage, kara wins)

                String[] shdwBxrs = {"C. Loud!", "Dosidos", "Smog"};
                int[] bxrHealth = {75, 22, 50};
                int[] bxrDmg = {10, 22, 15};

                clearConsole(500);
                slowTxt(cName + " got jumped by a vape cloud!\n", 10);
                combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, shdwBxrs, bxrHealth, bxrDmg, "Stranger", 150, 30);

                rightTalkingCats();
                isSpeaking ("Stranger", "I thought you were done for there, mate! Nice holding your ground!");

                slowTxt("\n\nUnfortunately...", 120);
                clearConsole(500);

                slowTxt("The pair get stopped at a checkpoint!\n\n", 100);

                rightTalkingCats();
                isSpeaking("Stranger", "Looks like this is where we split " + cName + " thanks for getting me this far.\n");
                slowTxt("\nThe stranger hopped out of the cart before the police had a chance to spot him.\n", 100);
                clearConsole(200);
            } else {
                slowTxt("\n\nThe farmer flipped off the stranger and walked away...\n", 100);
                clearConsole(200);
                slowTxt("Unfortunately...", 120);

                clearConsole(500);

                slowTxt(cName + " was stopped at a checkpoint!\n\n", 100);
            }

            // I didn't have enough time to add the rest
            /* 

            Choice 2 (decline):
                    isSpeaking (cName, "No thank you. Now, if you'll excuse me, I have
            + places to be.)
                    System.out.print ("You jump on your cart and head back home without
            + looking back.")
                    System.out.print ("You can't help but feel a little remorse for the guy... 
                    (Also pisses the stranger off)
            
                    System.out.print ("On your way home you can't help but notice strange"
                                + "noises coming from the back of your cart."
                    System.out.print ("You stop your cart to investigate only to see a shadow"
                                + "dart out of your cart")
                    isSpeaking (cName, "Didn't I say I wasn't going to involve myself with"
                                + "whatever it is you're running from?")
                    System.out.print ("The stranger lunges at you with a frozen salmon off" 
                                + "your cart.")
                    (Maybe an easy combat stage where kara always wins)
                    
                    isSpeaking ("Stranger", "PLEASE! Spare me! Don't you have a heart?")
                    isSpeaking ("Stranger", "Please! Just take me to town, and I swear you'll"
                                + "NEVER hear from me again!")
            Choice 1 (decline only to piss stranger off)
                    (Pisses stranger off)
                    isSpeaking ("Stranger", "Fuck you, man.. I'll die out here!")
            -
            isSpeaking (cName, "Fine. I don't trust you... but I can't leave you in the"
            + "middle of nowhere! I'm not heartless, either. Get"
            + "in.")
                    
            System.out.print ("You see your farm on the horizon as you approach
            + town. You don't know when, but the stranger
            + jumped out without saying a word.")
            
            System.out.print ("You arrive home, unpack, unwind, and go to sleep.")
            
            System.out.print ("The muffled floorboards squeak outside your front
            + door")
            
            System.out.print("*A few hours later...*")
            System.out.print ("You wake up to warm sun rays gleaming on your face and a gentle"
            + "breeze as a butterfly flutters by your face... wait, what?")
            System.out.print ("You jump out of bed to find the front door wide open, house key still " 
            + "dangling in the knob, and all of your valuables missing!")
            (Stranger steals some of your money, too if you pissed him off or something)
            
            System.out.print ("No doubt, the stranger was responsible for this.")
            
            System.out.print("You storm back to the slums, determined to find answers. But as you"
            + "approach, you see guards setting up barricades around some
                + entrances.")
            System.out.print ("The hair along your spine stands pin straight as you enter the city.")
            System.out.print("The streets beyond are eerily empty. The only sound is the rustle of
            + paper as a warning notice flutters in the wind...")
            */

            // Farmer background by Roberto
        } else if (background.equals("Dealer")) { // Dealer background written by Rigo
            // Dealer background written by Rigo
            shoottasRep = 1;
            stabbasRep = -1;

            slowTxt("Sometimes... the streets of Keji have more money flowing than the buisinesses downtown.\n\n", 100);

            clearConsole(500);
            rightTalkingCats();
            isSpeaking(colour("Tweaker", "Purple"), "Yo! I heard you're the plug on this block.\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking(colour(cName, "Green"), "Depends on whatchu need brodie.\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking(colour("Tweaker", "Purple"), "Lemme get 5 Gs of some Silvervine Sorbet and a 3.5 of Whizker Waltz.\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking(colour(cName, "Green"), "Alright its 150 for the Silvervine and 50 for the 8th.\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking(colour("Tweaker", "Purple"), "Damn! Whats in the Silvervine?\n");

            clearConsole(500);
            leftTalkingCats();
            System.out.print("\n" + cName + ": ");
            playerSelection();

            clearConsole(500);
            if (skills[1] >= 20) {
                clearConsole(500);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"), "It's almost 80% nepetalactone. Waltz is only about 30% NTT.\n    Both will get you bonkered tho. Silvervine will just lasts like 3 hours longer.\n");

                clearConsole(500);
                rightTalkingCats();
                isSpeaking(colour("Tweaker", "Blue"), "Ohh ok ok. Yeah ill take it.\n\n");
                slowTxt("The customer paid " + cName + " and took their product...\n", 100);
                stats[5] += 200;
            } else {
                clearConsole(500);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"), "Just trust me its worth it.\n");

                clearConsole(500);
                rightTalkingCats();
                isSpeaking(colour("Tweaker", "Red"), "Yeah whatever dude. Just give me the boof.\n\n");

                System.out.println("The "+colour("Tweaker", "RED")+" pulled out a knife!");
                System.out.println("But " + colour(cName, "Green") + " has a gun...\n");
                System.out.println("\n1. Escalate\n2. Diffuse\n");

                switch (playerSelection()) {
                    case "1":
                        clearConsole(500);
                        leftTalkingCats();
                        isSpeaking(colour("\n" + cName, "Green"), "Man ion got time for your shit.\n\n");
                        slowTxt(cName + " popped a cap in his ass!\n", 50);
                        break;
                    default:
                        isSpeaking(colour(cName, "Green"), "Whoa buddy put the doohickey away! Im not tryna ruin my night today. Just take this and leave.\n\n");
                        System.out.println(cName + " gave the tweaker a laced spliff and then he left.\n");
                }
            }

            clearConsole(1000);
            slowTxt("About 30 minutes pass by... Then a new customer approaches " + colour(cName, "GREEN") + ".", 100);
            clearConsole(300);

            clearConsole(500);
            rightTalkingCats();
            isSpeaking(colour("Customer", "Purple"), "Hello fellow ! Im trying to find some of that good good!\n");

            clearConsole(500);
            leftTalkingCats();
            isSpeaking(colour(cName, "Green"), "And Im supposed to help how exactly?\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking(colour("Customer?", "Purple"), "C'mon man. I know you sell premium catnip.\n");

            clearConsole(700);
            slowTxt("\nThe hairs on " + cName + "'s neck rise.\n", 130);

            clearConsole(700);
            leftTalkingCats();
            isSpeaking(colour(cName, "Green"), "I dunno who you think I am, but I dont sell that.\n    Im just enjoying my J on the street. Nothing illegal about that.\n");

            clearConsole(500);
            rightTalkingCats();
            isSpeaking(colour("Customer?", "Purple"), "Look I dont want to get you into any trouble.\n    I just want 3 ounces of some Silverwine Sorbet.\n");

            if (skills[1] >= 20) {
                clearConsole(700);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"), "Uhmm its actually called Silvervine... Sorbet...\n");
    
                clearConsole(500);
                rightTalkingCats();
                isSpeaking(colour("Customer?", "Red"), "I do not give a fuck just give me the narcotics.\n");
            }
            System.out.println("\n1. Sell her 3 ounces\n2. Refuse to sell\n");

            switch (playerSelection()) {
                case "1":
                    clearConsole(500);
                    leftTalkingCats();
                    isSpeaking(colour(cName, "Green"), "Fine. I dont have enough Silver tho, I can get you 1.5 ounces and 1.5 of Velvet Claw.\n");

                    clearConsole(500);
                    rightTalkingCats();
                    isSpeaking(colour("Customer", "Purple"), "Dang. Thats fine how much is it for both?\n");

                    clearConsole(500);
                    leftTalkingCats();
                    isSpeaking(colour(cName, "Green"), "1,260 for the Silvervine and 450 for the Velvet. Ill round it down to 1,700.\n");

                    clearConsole(500);
                    leftTalkingCats();
                    isSpeaking(colour("Customer", "Red"), "Sweet. Thank you!\n");

                    slowTxt("The customer paid " + colour(cName, "Green") + " and took their product...\n", 100);
                    govRep -= 2;
                    stats[5] += 1700;
                    break;
                default:
                    clearConsole(500);
                    leftTalkingCats();
                    isSpeaking(colour(cName, "Green"), "Sorry ma'am I dont sell Silverwine. Theres a dispensary about 15 minutes from here.\n    Maybe they'll sell it to you there.\n");

                    clearConsole(500);
                    rightTalkingCats();
                    isSpeaking(colour("Customer", "Red"), "Fine you queen. Just letting you know.\n    They already know. They've been on your tail for three months.\n\n");
                    govRep -= 1;
                    slowTxt("The 'customer' hisses at " + colour(cName, "Green") + " and leaves.\n\n", 100);
            }
            
            slowTxt("Not even 5 minutes later, several NBI agents corner " + colour(cName, "Green") + " before they can escape.\n", 130);

            clearConsole(500);
            talkingCats(L_CLOSED, FED);
            isSpeaking(colour("Fed", "Red"), "Freeze! You are under arrest for distribution of a controled substance\n    and possesion of a deadly weapon. Turn around slowly and keep your hands in the air.\n\n");

            slowTxt(colour(cName, "Green") + " is facing up to 20 years in federal prison.\n", 100);
            System.out.println("\n1. Take a plea deal\n2. Rat out the members of the Shoottas gang\n3. Serve the full sentence\n");

            switch (playerSelection()) {
                case "1":
                    slowTxt("The judge was paid off by the Shoottas and the sentece was reduced to 2 years!\n\n", 100);
                    slowTxt("...But " + colour(cName, "Green") + " should stay away from feds once they're back on the street...\n\n", 100);
                    shoottasRep += 3;
                    break;
                case "2":
                    isRat = true;
                    govRep += 3;
                    shoottasRep -= 10;
                    stabbasRep -= 10;
                    slowTxt(cName + " spent four months in prison but lost all respect with the gangs in the slums.\n\n", 100);
                    break;
                default:
                    slowTxt("Unfortunately... " + cName + " was stabbed inside of prison by a rival gang and bled out on the floor.\n\n", 100);
                    shoottasRep += 4;
                    stats[3] -= 1;
                    System.out.println("\nLives left: " + stats[3] + "\n\n");
                    slowTxt(colour(cName, "Green") + " was released early because they technically served a life sentence!\n\n", 100);
            }
            // Dealer background written by Rigo
        } else if (background.equals("CEO")) { // CEO background written by Jennifer
            // CEO background written by Jennifer
            int convincing = 0;
            slowTxt(
                "Amid the worn-out, crowded street, this individual stands out from afar,\n"
                + "dressed in a sleek, expensive-looking suit and polished shoes that contrast\n"
                + "sharply with the dirt road beneath them. He scans the area, observing\n"
                + "the people and their surroundings with a keen blend of curiosity and strategic intent.\n"
                + "He stops to chat with a young man resting against a worn-down wall.\n\n"
            , 25);

            clearConsole(1000);
            leftTalkingCats();
            isSpeaking(colour(cName, "Green"), "You there... What's your name?\n");

            clearConsole(1000);
            rightTalkingCats();
            isSpeaking(colour("Bum", "Purple"), "Depends who's asking. You don't exactly look like you belong around here.\n");

            if (skills[0] >= 20) {
                convincing += 2;
                clearConsole(1000);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"), "I know how to defend myself. And I am here to gift opportunities.\n"
                + "    So I believe I do belong here in a sense.");
            } else {
                clearConsole(1000);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"), "I suppose not. Think of me as an opportunity wrapped in a fancy suit.\n");
            }

            clearConsole(1000);
            rightTalkingCats();
            isSpeaking(colour("Bum", "Purple"), "What kind of opportunity are we talking about here?\n");

            if (skills[1] >= 20) {
                convincing += 2;

                clearConsole(1000);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"),"A job, money, warm food, maybe even a better place to live. What more could you want?\n");

                clearConsole(1000);
                rightTalkingCats();
                isSpeaking(colour("Bum", "Purple"), "Hmm... Sounds too good to be true whats the catch.");
            } else {
                clearConsole(1000);
                leftTalkingCats();
                isSpeaking(colour(cName, "Green"),"I'm looking to hire people like you... 20 doubloons per day, and a on site cafeteria.\n");

                clearConsole(1000);
                rightTalkingCats();
                isSpeaking(colour("Bum", "Red"), "(Snarling) People like me? You mean desperate folks ready to break their backs for scraps?\n"
                + "    Yeah, we've heard about your type here... Fancy suit, big promises, and nothing but lies.\n");
                slowTxt("\nThe " + colour("Bum", "Red") + " stood up to " + colour(cName, "Green") + "!\n", 50);

                System.out.println("\n1. Escalate\n2. Diffuse\n");
                switch (playerSelection()) {
                    case "1":
                        convincing -= 2;
                        clearConsole(1000);
                        leftTalkingCats();
                        isSpeaking(colour(cName, "Green"),"You ungrateful feral! I am giving you a new start!\n");
                        break;
                    default:
                        convincing++;
                        clearConsole(1000);
                        leftTalkingCats();
                        isSpeaking(colour(cName, "Green"), "Now, don't be so bitter and ungrateful. Sure, the pay won't make you rich, but it's steady and\n"
                        + "    better than digging through trash for scraps. Let's be honest-who else would even bother hiring you lot besides me?\n");

                        clearConsole(1000);
                        rightTalkingCats();
                        isSpeaking(colour("Bum", "Purple"), "(Muttering) Maybe. But why us? Why here? You could use machines or find better workers.\n");

                        if (skills[3] >= 10) {
                            convincing++;
                            clearConsole(1000);
                            leftTalkingCats();
                            isSpeaking(colour(cName, "Green"), "(Smiling) Believe it or not, this is for you. A way out of this place, a chance at something better.\n"
                            + "    That's all I'm offering.\n");

                            clearConsole(1000);
                            rightTalkingCats();
                            isSpeaking(colour("Bum", "Purple"), "Hmm... Sounds too good to be true whats the catch.");
                        } else {
                            convincing--;
                            clearConsole(1000);
                            leftTalkingCats();
                            isSpeaking(colour(cName, "Green"), "Its quite simple... I rather spend 20 per employee than 200.");

                            clearConsole(1000);
                            rightTalkingCats();
                            isSpeaking(colour("Bum", "Red"), "(Clenching fist) You're good at sweet-talking, I'll give you that.\n"
                            + "    But you're not honest so, what's the catch?\n\n");
                        }
                }
            }

            slowTxt("\n" + cName + " has a few options:\n\n"
                + "1. \"I Just need cheap labour\" (Speech: " + skills[1] + "/30)\n"
                + "2. \"Take it or leave it\" (Speech: " + skills[1] + "/10)\n"
                + "3. \"There is no catch\" (Sneak: " + skills[3] + "/20)\n"
                + "4. \"You need the job\" (Strength: " + skills[0] + "/40)\n\n"
            , 40);

            switch (playerSelection()) {
                case "1":
                    if (skills[1] >= 30) {
                        convincing += 3;
                        clearConsole(1000);
                        leftTalkingCats();
                        isSpeaking(colour(cName, "Green"), "The catch is... that there is no catch! I simply need cheap labour.\n");
                        slowTxt("\nHe looks over his should as if he is talking to someone there.\n\n", 68);

                        clearConsole(1000);
                        rightTalkingCats();
                        isSpeaking(colour("Bum", "Purple"), "Haha! At least this one doesn't try to pretend! Ill tell the boys about you.\n");
                    } else {
                        convincing--;
                        isSpeaking(colour(cName, "Green"), "I simply require cheaper labour.\n");
                        isSpeaking(colour("Bum", "Purple"), "Hmm. At least you're honest.\n");
                    }
                    break;
                case "2":
                    if (skills[1] >= 10) {
                        convincing++;
                        isSpeaking(colour(cName, "Green"), "The catch is simple: take the offer, or stay here.\n"
                        + "    I'm not going to sugarcoat it-this isn't charity; it's business. But it's the kind of business that benefits both of us.\n");
                        isSpeaking(colour("Bum", "Purple"), "You're not bad suit... Ill ask around to see if anyone else is interested.\n");
                    } else {
                        convincing--;
                        isSpeaking(colour(cName, "Green"), "You can either take the job or not.\n");
                        isSpeaking(colour("Bum", "Purple"), "Pfft... Thanks for clearing that up.\n");
                    }
                    break;
                case "3":
                    if (skills[3] >= 20) {
                        convincing += 2;
                        isSpeaking(colour(cName, "Green"), "Thats the thing about working for me. There is no catch at all.\n");
                        isSpeaking(colour("Bum", "Purple"), "Yeah right. Ill ask around to see if anyone believes you.\n");
                    } else {
                        convincing--;
                        isSpeaking(colour(cName, "Green"), "There is no catch.\n");
                        isSpeaking(colour("Bum", "Purple"), "Yup. I bet you're security is just there to keep us safe too.\n");
                    }
                    break;
                case "4":
                    if (skills[0] >= 40) {
                        convincing += 4;
                        isSpeaking(colour(cName, "Green"), "You need this job more than I need you.\n");
                        isSpeaking(colour("Bum", "Purple"), "You're not wrong... I'll round up a few good workers by tomorrow.\n");
                    } else {
                        convincing--;
                        isSpeaking(colour(cName, "Green"), "You need this job.");
                        isSpeaking(colour("Bum", "Purple"), "Pfft... Obviously\n");
                    }
                    break;
                default:
                    isSpeaking(colour(cName, "Green"), "Fine... You got me! My workers just dont want to work here.");
                    break;
            }

            if (convincing >= 4) {
                isSpeaking(colour("Bum", "Purple"), "You really think this one job will turn my life around? Those are some pretty big promises.\n");
                isSpeaking(colour(cName, "Green"), "It won't change everything, but it's a start. Think it over carefully. I'll be back tomorrow to see\n"
                + "    how many others like you are smart enough to take the offer.\n");
            } else if (convincing > 0) {
                isSpeaking(colour("Bum", "Purple"), "You aren't that convincing...\n");
                isSpeaking(colour(cName, "Green"), "Think about it some more over the night, this is a big decision. I will be back tomorrow\n");
            } else if (convincing < 0) {
                isSpeaking(colour("Bum", "Red"), "You shouldn't come back here without you're fancy security...\n");
                isSpeaking(colour(cName, "Green"), "Very well. I will head out now, but I will be back tomorrow, hopefully you've changed your mind by then.\n");
            } else {
                isSpeaking(colour(cName, "Green"), "Think about it over the night. I'll be back tommorrow.\n");
            }

            slowTxt("\n\n"+ cName + " turns away, leaving the individual staring after his retreating figure deep in thought.\n", 68);
            
            // Couldnt Finishe the rest

            /*
            Choice one
            The following day, the CEO returns to the same spot, his bodyguard close at his side. The …  is there again, now joined by a small group of others—men and women with weary eyes and hardened expressions. The atmosphere is heavy, charged with quiet tension. The CEO steps forward, his hands clasped behind his back, projecting an aura of calm authority.
            isSpeaking(“Ceo”, “Ah, back again, I see. And this time, you've brought company. So, have you reached a decision?"
            isSpeaking(“...”,  (Steps forward) “We’ve talked. We’re in. But only because we don’t have a choice”. 
            isSpeaking(“Ceo”, (Smiling faintly) “Choice is a luxury, isn’t it? But you’ve made the right decision. You won’t regret it.”
            isSpeaking(“...”, (Leaning forward) "That’s the thing—I already regret it. But starving isn’t much of a life either. Just tell us what you want us to do."
            isSpeaking(“Ceo”, (Straitens his posture) "Straight to the point—I like that. The transport departs at dawn tomorrow. We’ll supply uniforms, meals, and basic accommodations. The pay? Modest, but steady."
            isSpeaking(“...”, “Understood. We’ll be ready. Just tell us where to meet and what to expect once we’re there."
            isSpeaking(“Ceo”, (Smiling broadly) “Excellent. Welcome to the team. Trust me, this is the start of a better future for all of us.”
            The CEO pivots sharply and strides away, leaving the group standing in a heavy, uneasy silence. In the distance, the low growl of engines grows louder, announcing the arrival of the transport—a hulking, metallic presence that glints coldly against the grim backdrop of the slums.
            Choice two
            The following day, the CEO arrives at the same spot in the slums, this time unaccompanied by his bodyguard. Clad in the same immaculate suit, he exudes an air of confidence. The unemployed man awaits him, lounging casually against the same charred hoverbike. In the distance, a faint crowd gathers, observing the scene.
            isSpeaking(“Ceo”, (With a smirk), “Ah, good. You’re here. I had a feeling you’de come around. Ready to shake hands and secure your future?”
            isSpeaking(“...”, (Standing upright, arms crossed) “I’ve given it a lot of thought, and I’ve made my decision.”
            isSpeaking(“Ceo”, “Excellent. Go on, then.”
            isSpeaking(“..”, (Voice hardening) “No.”
            isSpeaking(“Ceo”, (A flash of annoyance crosses his face) “A no? Seriously? After everything I laid out for you? After I handed you a way out of this... pathetic mess?”
            isSpeaking(“...”, (“Chuckling darkly) “Oh, you did offer—an escape for yourself, not for me. I know your type—parasites. You don’t care about us; you only care about what’s convenient and profitable for you. Well, I’ve had enough of being used as someone else’s pawn.”
            isSpeaking(“Ceo”, (Stepping closer, voice low) “Careful with your words—that’s a bold accusation. But let me make one thing clear: this is your final chance. No one else will ever offer you an opportunity like this.”
            isSpeaking(“...”, (Smirking) “Exactly. No one else would have the nerve—and for good reason.”
            Suddenly, the man pulls a knife from behind his back and points it at the CEO. A wave of gasps sweeps through the crowd.
            isSpeaking(“Ceo”, (Taking a step back, raising his hands), “W-Wait a second! There’s no need for this. We can talk—!”
            isSpeaking(“...”, (Snarling) “Oh, now you want to talk? You waltz in here, flaunting your creds like you own the place, like we’re too shattered to push back. Well, guess what? We’re done playing along.”
            isSpeaking(“Ceo”, (Speaking carefully) “You’re making a grave mistake. This isn’t just theft—you’re destroying a lifeline. A lifeline that could have been your salvation.”
            isSpeaking(“...”, (Laughing bitterly) “Saved me? Don’t flatter yourself—you came here to own me. I don’t need your pathetic scraps. Now, hand over that fancy watch and empty your pockets.”
            The CEO hesitates, his gaze darting around the area in search of assistance. None arrives. With a resigned sigh, he reaches into his coat, unfastens the sleek watch from his wrist, and pulls out a handful of cash, surrendering them reluctantly.
            isSpeaking(“Ceo”, (Through gritted teeth) “This won’t end well for you. I don’t forgive, and I never forget.”
            isSpeaking(“..”, (Shrugging) “We don’t either. Now get out. And don’t even think about coming back.”
            The unemployed man gestures sharply with the knife, pointing toward the edge of the slums. The CEO shoots him a seething glare but ultimately retreats, his pride—and ambitions—left in ruins. The crowd silently parts as he passes, murmurs being heard from every corner. 
            */

            // CEO background written by Jennifer
        } else { // Unemployed background written by Kanishq
            // Unemployed background written by Kanishq
            clearConsole(1000);
            System.out.print("\nDid you want to skip the backgrounds? (y/n): ");
            response = playerSelection();

            if (response.equalsIgnoreCase("y")) {
                slowTxt("\nOk...\n", 150);
            } else {
                slowTxt("\n" + cName + " was a skilled programmer, but when the economy crashed, several companies went bankrupt,\n"
                + "and many were laid off. With no savings and no family nearby, "+cName+" quickly ran out of options.\n"
                + "Now, including "+cName+", over ten-thousand live in the slums trying to survive each day\n"
                + "while desperately searching for work to rebuild their life.\n"
                , 50);

                slowTxt("", 10);

                slowTxt("\n"+cName+" sits in a dark alleyway near a small fire, clutching his thin jacket tightly around himself.\n"
                + "A stray cat watches him from a few feet away, its eyes glowing in the dim light.\n\n"
                , 68);

                isSpeaking(colour(cName, "GREEN"), "Another night in the cold... It's funny how quickly life can change.\n"
                + "One day, you're writing code for cutting-edge projects; the next, you're fighting over scraps.\n\n");
                slowTxt(cName + " rubs their hands together to warm them, staring at the flickering flames.\n\n", 50);
                isSpeaking(colour(cName, "GREEN"), "This city doesn't care about people like me. As long as you're useful, you're seen.\n"
                + "Once you're not... you disappear.\n");
                isSpeaking(colour("Cat", "Cyan"), "Meow\n\n");
                slowTxt(cName + " pauses, gazing up at the dark sky, their breath visible in the frigid air.\n\n", 50);
                isSpeaking(colour(cName, "GREEN"), "(sighs) Still, I've got to keep trying. Someone has to be willing to give me a chance.\n"
                + "Even if it's just a small job, I can work my way back.\n");
                isSpeaking(colour("Cat", "Cyan"), "Meow\n\n");
                
                System.out.print(colour(cName, "Green") + ": ");
                switch (playerSelection()) {
                    case "Meow":
                        isSpeaking(colour("Cat", "Cyan"), "Thats what I've been saying G.\nYou gotta stop them from deleting history forever!\n");
                        slowTxt("\n"+cName+" rubs their eyes.\n\n", 100);
                    default:
                        isSpeaking(colour("Cat", "Cyan"), "Meow\n");
                        isSpeaking(colour(cName, "GREEN"), "Type shit.\n");
                }

                slowTxt("\n"+cName+"'s stomach growls, and they clutch it with a wince.\n\n", 50);
                isSpeaking(colour("Cat", "Cyan"), "Meow\n");
                isSpeaking(colour(cName, "GREEN"), "But first, I need to find food for tomorrow."
                + " I can't think straight on an empty stomach.\n");
                slowTxt("\nThe stray cat lets out a soft meow, stepping a little closer.\n\n", 50);
                isSpeaking(colour(cName, "GREEN"), "(smiles faintly) At least you're here, little one. You and me, huh? Survivors.\n"
                + "Let's hope tomorrow brings something better.\n");
                slowTxt("\n" + cName + " tosses a small crumb from his pocket toward the cat, who sniffs it cautiously before eating.\n"
                + "\nThe fire crackles softly as the night deepens. " + cName + " rests on a old mattress with the cat.", 68);

                pause(3000);                
            }
            // Unemployed background written by Kanishq
        }

        clearConsole(2000);
        slowTxt(
            "An outbreak of a new virus started because stabbas were stabbing people with bloody knives and infecting them.\n"
            + cName + " was stopped at a police checkpoint where they are testing for Akaiha-01, the Crimson Plague...\n"
            + "\nThey were quarantined but were released early because the hospital was full.\n"
            + "\nNow " + cName + " is stuck inside the slums until they can talk to the right people, sneak out, or brute force their way out of the slums.\n\n(Press Enter to continue)"
        , 32);
        playerSelection();
        clearConsole(500);

        String ending = "";
        Boolean inSlums = true;
        questComplete[0] = false; // Find the Sandwich
        questComplete[9] = false; // Find the Nip
        questComplete[4] = false; // Drink Elixir
        questComplete[5] = false; // Make a thingy
        questComplete[6] = false; // Has thingy part 1
        questComplete[7] = false; // Has thingy part 2
        questComplete[8] = false; // Has thingy part 3

        // __________________________________________________ Slums While Loop __________________________________________________

        // While loop that places the character in the slums
        while (inSlums) {
            turns++;
            clearConsole(1);
            slowTxt(cName + " is in the:", 100);
            slowTxt(
                  "\n"
                + "   ,-. .-.,---.     .-,,-.     ,--,  ,-. _______.-.   .-.      .---. ,-.    .-. .-.           .---. \n"
                + "   | |/ / | .-'     | ||(|   .' .')  |(||__   __|\\ \\_/ )/     ( .-._)| |    | | | ||\\    /|  ( .-._)\n"
                + "   | | /  | `-.     | |(_)   |  |(_) (_)  )| |    \\   (_)    (_) \\   | |    | | | ||(\\  / | (_) \\   \n"
                + "   | | \\  | .-'     | || |   \\  \\    | | (_) |     ) (       _  \\ \\  | |    | | | |(_)\\/  | _  \\ \\  \n"
                + "   | |) \\ |  `--.(`-' || |    \\  `-. | |   | |     | |      ( `-'  ) | `--. | `-')|| \\  / |( `-'  ) \n"
                + "   |((_)-'/( __.' \\_ )|`-'     \\____\\`-'   `-'    /(_|       `----'  |( __.'`---(_)| |\\/| | `----'  \n"
                + "   (_)   (__)       (_)                          (__)                (_)           '-'  '-'         "
                + "\n\n"
            , 1);
            // https://www.patorjk.com/software/taag/#p=display&f=Wet%20Letter&t=Keji%20%20%20City%20%20%20Slums

            pause(300);
            if (infected) {
                System.out.println("\n\n");
                for (String piece: I_CLOSED)
                    System.out.println(piece);
                slowTxt(cName + " is infected with the crimson plague!\n\n", 100);
                stats[1] -= 5;
            }

            if (helpMe)
                slowTxt("Having negative doubloons is a crime punishable by death.", 50);
            // Feds go after character if money is negative or if rep is bad
            if (govRep < -5 || stats[5] < 0) {
                slowTxt(cName + " is being persued by the feds!\n\n", 100);

                boolean inCombat = false;

                do {
                    String[] feds = {"Cop", "Cop", "Cop"};
                    int[] fedHealth = {125 + stats[2]*10, 150 + 10*stats[2], 200};
                    int[] fedDamage = {5*stats[2], 10 + stats[2]*5, 25};

                    combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, feds, fedHealth, fedDamage, "", 0, 0);
                    inCombat = combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Lt. Tenet", 200+stats[2]*stats[2], 30);
                    turns++;
                } while (inCombat);

                clearConsole(1000);
                slowTxt("\n" + cName + " got away from the feds...\n\n", 100);
            }

            printQuests(quest, questComplete);
            System.out.println("\nWhere will " + cName + " go?\n");
            pause(100);

            slowTxt(
                  "1. Checkpoint to Downtown Keji\n"
                + "2. Black Market (Shops)\n"
                + "3. Glorbo's Garbage (Shop)\n"
                + "4. Steel Rd. (Rep: "+stabbasRep+")\n"
                + "5. Greysand Ave. (Rep: "+shoottasRep+")\n"
                + "6. Tetanus Tapwater (Pub)\n"
                + "7. The Sino\n\n"
            , 10);

            response = playerSelection();

            // Sets the character's location
            System.out.println("");
            if (response.equals("1")) {
                location = "Checkpoint";
                System.out.println(cName + " is heading to " + location);
            } else if (response.equals("2")) {
                location = "The Factory";
                System.out.println(cName + " is heading to " + location);
            } else if (response.equals("3")) {
                location = "Glorbo's";
                System.out.println(cName + " is heading to " + location);
            } else if (response.equals("4")) {
                location = "Steel Road";
                System.out.println(cName + " is heading to " + location);
            } else if (response.equals("5")) {
                location = "Greysand Avenue";
                System.out.println(cName + " is heading to " + location);
            } else if (response.equals("6")) {
                location = "Tetanus Tapwater";
                slowTxt(cName + " is heading to " + location, 50);
            } else if (response.equals("7")) {
                location = "The Sino";
                slowTxt(cName + " is heading to " + location, 50);
            } else {
                System.out.println("Thats not a valid input for the location. (1-7)");
                continue;
            }


            // __________________________________________________ Slums Locations __________________________________________________

            if (location.equals("Checkpoint")) { // __________________________________________________ {Story Location}
                slowTxt(
                    "\n"+cName+" is now in the slums and in quarantine because of the new virus Akaiha-01.\n" + 
                    "But "+cName+" absolutely has to get out because the streets will be full of chaos. However,\n" +
                    cName+" does not yet know exactly how to get out...\n\n" +
                    "Days go by and "+cName+" still has no clear plan on how to deal with this situation.\n\n" +
                    "Although "+cName+" is officially in quarantine, they can now can move freely throughout the slum.\n" +
                    "This is because the police are too disgusted by the conditions in the slums and do not dare to enter.\n" + 
                    "The entire area has therefore been quarantined without the authorities themselves being present.\n\n" +
                    "These circumstances give "+cName+" the opportunity to look for loopholes to try to escape the quarantine.\n",
                15);

                if (infected) {
                    slowTxt(cName + " is infected with the crimson plague!", 100);
                    stats[1] -= 3;

                    clearConsole(300);
                    talkingCats(I_OPEN, FED);
                    isSpeaking(colour(cName, "Green"), "HELP ME!!! PLEASE HELP! EVERYTHING HURTS!");

                    clearConsole(300);
                    talkingCats(I_CLOSED, FED);
                    isSpeaking(colour(cName, "Green"), "STAY BACK! I WILL SHOOT");

                    clearConsole(300);
                    talkingCats(I_OPEN, FED);
                    isSpeaking(colour(cName, "Green"), "Chill! I was kidding damn! Its not that serious...");
                    clearConsole(500);
                }
                
                if (questComplete[5]) {
                    slowTxt("\n\n" + cName + " could use the bomb as a disctraction and sneak out.\n", 100);

                    System.out.println("\n1. Try to sneak out. ["+skills[3]+"/25]\n2. Think of something else.\n");

                    if (playerSelection().equals("1")) {
                        if (skills[3] >= 25) {
                            slowTxt("\n" + cName + " set off the bomb in an empty football field near the checkpoint...\nDuring the chaos they were able to sneak out through the checkpoint...\n", 70);

                            inSlums = false;
                            ending = "Ok Boomer";
                            continue;
                        } else {
                            slowTxt("\n" + cName + " set off the bomb in an empty football field near the checkpoint...\nDuring the chaos they tried to sneak out through the checkpoint...\n", 70);
                            clearConsole(500);
                            slowTxt("Guard: HEY! What are you doing!\n\n"+cName+" pulled out their " + cWeapon + "...\n", 100);
                            if(combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Guard", 130, 30)) {
                                inSlums = false;
                                ending = "Almost Close Enough";
                                continue;
                            } else {
                                slowTxt("\n" + cName + " went to jail!", 100);
                                stats[2] -= 1;
                                clearConsole(500);
                                slowTxt("\n" + cName + " was stabbed in jail and was released early.", 100);
                                infected = true;
                            }
                        }
                    }
                }
                
                if (skills[3] >= 20) {
                    slowTxt("\nMaybe " + cName + " can sneak out through a less guarded area.\n", 100);

                    System.out.println("\n1. Try to sneak out. ["+skills[3]+"/60]\n2. Think of something else.\n");

                    if (playerSelection().equals("1")) {
                        if (skills[3] >= 60) {
                            slowTxt(cName + " was able to crawl under a part of the fence during the night...", 150);

                            inSlums = false;
                            ending = "Sneaky Beaky Like";
                            continue;
                        } else {
                            slowTxt(cName + " got caught by a guard!\n\n", 50);

                            if(combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Guard", 130, 30)) {
                                govRep -= 1;
                            } else {
                                slowTxt("\n" + cName + " went to jail!", 100);
                                stats[2] -= 1;
                                clearConsole(500);
                                slowTxt("\n" + cName + " was stabbed in jail and was released early.", 100);
                                infected = true;
                            }
                        }
                    }
                } else {
                    slowTxt(cName + " is not stealthy enough to pull off a breakout...\n", 100);
                }

                if (skills[1] >= 20) {
                    slowTxt("Maybe " + cName + " can convince a guard to let them through.\n", 100);

                    System.out.println("\n1. Convince a guard. ["+skills[1]+"/40]\n2. Think of something else.\n");

                    if (playerSelection().equals("1")) {
                        if (skills[1] >= 40) {
                            if (skills[1] >= 90) {
                                clearConsole(500);
                                talkingCats(L_OPEN, FED);
                                isSpeaking(colour(cName, "Green"), "Let me through!");

                                clearConsole(500);
                                talkingCats(L_CLOSED, FED);
                                isSpeaking(colour("Guard", "blue"), "Ohh ok.");

                                clearConsole(500);
                                slowTxt("That worked somehow!", 100);

                                inSlums = false;
                                ending = "Confidence";
                                continue;
                            } else {
                                clearConsole(500);
                                talkingCats(L_OPEN, FED);
                                isSpeaking(colour(cName, "Green"), "Can I leave... Please. Ill do "+colour("anything", "purple")+"!");

                                clearConsole(500);
                                talkingCats(BLUSH, FED);
                                isSpeaking(colour("Guard", "purple"), "Anything?");

                                clearConsole(690);
                                talkingCats(SLEEP, FED);
                                isSpeaking(colour("Guard", "purple"), "I want a tuna sandwich, and a NipCig MK4.");
                                quest[0] = "Find the Sandwich";
                                quest[9] = "Find the NipCig Mk4.";

                                if (questComplete[0] && questComplete[9]) {
                                    clearConsole(500);
                                    talkingCats(BLUSH, FED);
                                    isSpeaking(colour(cName, "Green"), "I did say anything...");

                                    clearConsole(500);
                                    talkingCats(SMOL, FED);
                                    isSpeaking(colour("Glingo the Guard", "blue"), "I appreciate it, but this is a MK III... Im Just kidding I like this one more anyway.\n\n");
                                    slowTxt("The Guard let " + cName + " through the gate!", 100);
                                    inSlums = false;
                                    ending = "Fetcher";
                                    clearConsole(100);
                                    continue;
                                } else {
                                    clearConsole(500);
                                    talkingCats(SMOL, FED);
                                    isSpeaking(colour(cName, "Green"), "Ohh...");
                                }
                            }
                        } else {
                            clearConsole(500);
                            talkingCats(BLUSH, FED);
                            isSpeaking(colour(cName, "Green"), "Can I leave... Please.");

                            clearConsole(500);
                            talkingCats(SMOL, FED);
                            isSpeaking(colour("Guard", "Red"), "Nope.");
                        }
                    }
                } else {
                    slowTxt(cName + " is too anxious too talk to a guard...\n", 100);
                }

                if (skills[0] >= 30) {
                    slowTxt("Or... " + cName + " can just fight their way through the gate...", 100);

                    System.out.println("\n1. Kill\n2. Think of something else.\n");

                    if (playerSelection().equals("1")) {
                        boolean[] madeIt = {false, false, false,};
                        String[] guards = {"Guard", "Guard", "Guard"};
                        int[] guardHealth = {120, 120, 120};
                        int[] guardDmg = {20, 20, 20};
                        madeIt[0] = combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Corporal Tiger", 150, 30);
                        combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, guards, guardHealth, guardDmg, "", 0, 0);
                        madeIt[1] = combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Luitenant Lightweight", 200, 40);
                        combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, guards, guardHealth, guardDmg, "", 0, 0);
                        madeIt[2] = combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Captain Bands", 300, 50);

                        govRep -= 10;
                        if (madeIt[0] && madeIt[1] && madeIt[2]) {
                            clearConsole(300);
                            slowTxt(colour(cName, "red") + " killed them all...\n\n", 130);

                            inSlums = false;
                            ending = "Merciless";
                            continue;
                        } else {
                            clearConsole(300);
                            slowTxt(colour(cName, "red") + " escaped the slums but the feds kept following them...\n\n", 130);

                            inSlums = false;
                            ending = "Coward";
                            continue;
                        }
                    } else {
                        slowTxt(colour(cName, "Green" + ": I cant do that..."), 100);
                    }
                } else {
                    slowTxt(cName + " is too weak to fight through the gate...", 100);
                }
            } else if (location.equals("The Factory")) { // __________________________________________________ Black Market
                boolean foundIt = false;
                boolean inMarkets = true;
                String[] purchases = new String[10];
                clearConsole(300);
                slowTxt("\nThe Black Market is in a an abandoned sword factory which turned into a trade hub for outlaws.\n", 50);
                do {
                    System.out.println("\n1. Leave the Factory\n2. Odd Objects\n3. Rick-Shack\n4. Armour-4-All\n5. Marlin's Mysteries\n");

                    response = playerSelection();

                    // Black Market Shops by Roberto

                    if (response.equals("1")) {
                        slowTxt("\nIt was too musty for " + cName + " so they left.", 100);
                        inMarkets = false;
                        continue;
                    } else if (response.equals("2")) {
                        String[] thingsSelling = {
                            "Frozen Salmon",
                            "Baseball Bat",
                            "Coin Gun",
                            "Leather Armor",
                            "Scale Armor"
                        };

                        int[] itemsCost = {80,80,100,130,140};

                        purchases = shopping(cName, stats, "Ol' Orbo", thingsSelling, itemsCost);

                        for (int i = 0; i < 10; i++) {
                            if (purchases[i] == null)
                                continue;
                            if (purchases[i].equals(thingsSelling[0])) {
                                slowTxt(cName + " bought a " + thingsSelling[0] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[0] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Frozen Salmon";
                                    cDmgType = "Blunt";
                                    stats[6] = 25;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[0] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[0] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[1])) {
                                slowTxt(cName + " bought a " + thingsSelling[1] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[1] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Baseball Bat";
                                    cDmgType = "Blunt";
                                    stats[6] = 22;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[1] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[1] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[2])) {
                                slowTxt(cName + " bought a " + thingsSelling[2] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[2] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Coin Gun";
                                    cDmgType = "Blunt";
                                    stats[6] = 25;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[2] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[2] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[3])) {
                                slowTxt(cName + " bought a " + thingsSelling[3] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[3] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Leather Armour";
                                    cDmgRes = 0.6;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[3] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[3] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[4])) {
                                slowTxt(cName + " bought a " + thingsSelling[4] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[4] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Scale Armour";
                                    cDmgRes = 0.7;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[4] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[4] + ".\n", 100);
                                }
                            } else {
                                continue;
                            }
                        }
                        clearConsole(500);
                    } else if (response.equals("3")){
                        String[] thingsSelling = {
                            "Farmer's Sickle",
                            "Sushi Blade",
                            "Six Shooter",
                            "Shotgun",
                            "Sniper"
                        };

                        int[] itemsCost = {100,100,500,600,1400};

                        if (!questComplete[9]) {
                            thingsSelling[1] = "NipCig MK III";
                        }

                        purchases = shopping(cName, stats, "Shady Rick", thingsSelling, itemsCost);

                        for (int i = 0; i < 10; i++) {
                            if (purchases[i] == null)
                                continue;
                            if (purchases[i].equals(thingsSelling[0])) {
                                slowTxt(cName + " bought a " + thingsSelling[0] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[0] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Farmer's Sickle";
                                    cDmgType = "Sharp";
                                    stats[6] = 38;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[0] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[0] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[1])) {
                                
                                slowTxt(cName + " bought a " + thingsSelling[1] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[1] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Sushi Blade";
                                    cDmgType = "Sharp";
                                    stats[6] = 30;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[1] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[1] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[2])) {
                                slowTxt(cName + " bought a " + thingsSelling[2] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[2] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Six Shooter";
                                    cDmgType = "Ranged";
                                    stats[6] = 66;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[2] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[2] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[3])) {
                                slowTxt(cName + " bought a " + thingsSelling[3] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[3] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Shotgun";
                                    cDmgType = "Ranged";
                                    stats[6] = 78;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[3] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[3] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[4])) {
                                slowTxt(cName + " bought a " + thingsSelling[4] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[4] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Sniper";
                                    cDmgType = "Ranged";
                                    stats[6] = 115;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[4] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[4] + ".\n", 100);
                                }
                            } else {
                                continue;
                            }
                        }
                        clearConsole(500);
                    } else if (response.equals("4")){
                        String[] thingsSelling = {
                            "Plate Armor",
                            "Riot Gear",
                            "Soft Body Armor",
                            "Ceramic Level III+ Plate Carrier",
                            "Non-Explosive Reactive Body Armour"
                        };

                        int[] itemsCost = {180,420,425,750,1337};

                        purchases = shopping(cName, stats, "Brutus", thingsSelling, itemsCost);

                        for (int i = 0; i < 10; i++) {
                            if (purchases[i] == null)
                                continue;
                            if (purchases[i].equals(thingsSelling[0])) {
                                slowTxt(cName + " bought a " + thingsSelling[0] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[0] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Plate Armor";
                                    cDmgRes = 0.8;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[0] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[0] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[1])) {
                                slowTxt(cName + " bought a " + thingsSelling[1] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[1] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Riot Gear";
                                    cDmgRes = 0.9;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[1] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[1] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[2])) {
                                slowTxt(cName + " bought a " + thingsSelling[2] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[2] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Soft Body Armor";
                                    cDmgRes = 1.0;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[2] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[2] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[3])) {
                                slowTxt(cName + " bought a " + thingsSelling[3] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[3] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Ceramic Level III+ Plate Carrier";
                                    cDmgRes = 1.5;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[3] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[3] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[4])) {
                                slowTxt(cName + " bought a " + thingsSelling[4] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[4] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Non-Explosive Reactive Body Armour";
                                    cDmgRes = 1.75;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[4] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[4] + ".\n", 100);
                                }
                            } else {
                                continue;
                            }
                        }
                        clearConsole(500);
                    } else if (response.equals("5")){
                        String[] thingsSelling = {
                            "Thermobaric-Warhead Anti-Personel Rocket Launcher",
                            "Flamethrower",
                            "Lightning Rod",
                            "Samurai Armor",
                            "Cloak of Sorcery"
                        };

                        int[] itemsCost = {3999,1690,1899,256,2099};

                        if (quest[2] != null && !questComplete[2] && skills[1] >= 25) {
                            clearConsole(300);
                            leftTalkingCats();
                            isSpeaking(cName, "Hey have you seen that thing guy is looking for?");

                            clearConsole(300);
                            rightTalkingCats();
                            isSpeaking("Marlin", "Yep its up the alley and down the corner.");

                            foundIt = true;
                        }

                        purchases = shopping(cName, stats,  "Marlin", thingsSelling, itemsCost);

                        for (int i = 0; i < 10; i++) {
                            if (purchases[i] == null)
                                continue;
                            if (purchases[i].equals(thingsSelling[0])) {
                                slowTxt(cName + " bought a " + thingsSelling[0] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[0] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "TWAPR-L";
                                    cDmgType = "Elemental";
                                    stats[6] = 399;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[0] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[0] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[1])) {
                                slowTxt(cName + " bought a " + thingsSelling[1] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[1] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Flamethrower";
                                    cDmgType = "Elemental";
                                    stats[6] = 120;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[1] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[1] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[2])) {
                                slowTxt(cName + " bought a " + thingsSelling[2] + ", it is a weapon.\n", 100);
                                slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[2] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Lightning Rod";
                                    cDmgType = "Elemental";
                                    stats[6] = 126;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[2] + "!\n", 100);
                                    slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[2] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[3])) {
                                slowTxt(cName + " bought a " + thingsSelling[3] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[3] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Samurai Armor";
                                    cDmgRes = 0.75;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[3] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[3] + ".\n", 100);
                                }
                            } else if (purchases[i].equals(thingsSelling[4])) {
                                slowTxt(cName + " bought a " + thingsSelling[4] + ", it is armour.\n", 100);
                                slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);

                                slowTxt("\n1. Equip " + thingsSelling[4] + "\n2. Throw it away\n", 10);

                                if (playerSelection().equals("1")) {
                                    armour = "Steel & Sorcery Cloak";
                                    cDmgRes = 2.0;

                                    slowTxt("\n" + cName + " equiped the " + thingsSelling[4] + "!\n", 100);
                                    slowTxt("\nCurrent Armour Stats:\nEquipped: " + armour + "\nDamage Resistance: " + cDmgRes + "\n", 100);
                                } else {
                                    slowTxt("\n" + cName + " threw away the " + thingsSelling[4] + ".\n", 100);
                                }
                            } else {
                                continue;
                            }
                        }
                        clearConsole(500);
                    } else {
                        slowTxt("Thats not... no.", 130);
                        pause(300);
                    }

                    turns++;
                } while (inMarkets);

                if (quest[2] != null && questComplete[2] == false) {
                    slowTxt("\n" + cName + " is looking for the thing that the guy lost\n.", 100);
                    if (foundIt) {
                        slowTxt("\n" + cName + " found the thing! (+500)\n", 100);
                        questComplete[2] = true;
                        stats[5] += 500;
                    }
                }
            } else if (location.equals("Glorbo's")) { // __________________________________________________ Garbage Shop
                final String[] GLORBO = {
                    "              ____________    ",
                    "             /   ______    \\   ",
                    "            |     ____     |  ",
                    "            |              |  ",
                    "            |  __________  |  ",
                    "           (|   O  /|  O   |)  ",
                    "            |     | |      |   ",
                    "            |     |_|      |   ",
                    "            |              |   ",
                    "            |   |-----|    |   ",
                    "            \\_____________/    "
                };
                boolean inShop = true;
                boolean[] glorboCheckpoint = {false, false, false};
                int glorboTrust = 0;

                String[] purchases = new String[10];
                String[] garbage = {
                    "Electrical Stuff",
                    "Plastic Bits",
                    "Metal Parts",
                    "Elixir of ___",
                    "Lint"
                };

                int[] garbageCost = {500,75,300,1234,1};

                if (!questComplete[0]) {
                    garbage[1] = "Tuna Sandwich";
                    garbageCost[1] = 5;
                }
                if (questComplete[4]) {
                    garbage[3] = "Pre-Packaged Air -5lb Bottle-";
                    garbageCost[3] = 50;
                }
                if (questComplete[6]) {
                    garbage[0] = "Box of Random Screws and Nails";
                    garbageCost[0] = 60;
                }
                if (questComplete[7]) {
                    garbage[2] = "Rusty Can";
                    garbageCost[2] = 100;
                }
                if (questComplete[6] && questComplete[7]) {
                    if (questComplete[8]) {
                        garbage[4] = "Juggernog";
                        garbageCost[4] = 5000;
                    } else {
                        garbage[4] = "500 Pound Laser-Guided Bomb";
                        garbageCost[4] = 21896;
                    }
                } else {
                    garbage[4] = "Lint";
                    garbageCost[4] = 1;
                }

                slowTxt("\n" + cName + " walked into a small cluttered shop...\n", 100);
                clearConsole(300);

                for (String piece: GLORBO)
                    System.out.println(piece);
                slowTxt("\n"+colour("Glorbo", "yellow")+": 'Ello 'ello. Come on in... Name 's Glorbo, I'll sell anything you can find.\n", 50);
                clearConsole(700);

                while (inShop) {
                    turns++;

                    for (String piece: GLORBO)
                            System.out.println(colour(piece, "Yellow"));
                        slowTxt("\n"+colour("Glorbo", "yellow")+": You buyin' or sellin'?\n\n", 50);
                    System.out.println("\n1. Purchase Garbage\n2. Talk to Glorbo\n3. Sell Garbage\n4. Leave\n");
                    response = playerSelection();

                    if (response.equals("1")) { // Lets the player purchase items from the shop
                        purchases = shopping(cName, stats, "Glorbo", garbage, garbageCost);

                        for (int i = 0; i < 10; i++) {
                            if (purchases[i] == null)
                                continue;
                            if (purchases[i].equals("Electrical Stuff")) {
                                questComplete[6] = true;
                                slowTxt(cName + " put the Electrical Stuff in their pocket.\n\n", 100);
                            } else if (purchases[i].equals("Metal Parts")) {
                                questComplete[7] = true;
                                slowTxt(cName + " put the Metal Parts in their pocket.\n\n", 100);
                            } else if (purchases[i].equals("500 Pound Laser-Guided Bomb")) {
                                questComplete[8] = true;
                                slowTxt(cName + " might be able to use this to make a distraction...\n\n", 100);

                                if (helpMe)
                                    slowTxt("\n\n" + cName + " can use the bomb as a blunt weapon that does 120 damage or as a distraction for a secret ending.\n\n", 60);
                                System.out.println("\n1. Use the bomb as a blunt weapon\n2. Make a distraction\n");
        
                                switch (playerSelection()) {
                                    case "2":
                                        clearConsole(500);
                                        quest[5] = "Make the 'Thingy'";
                                        questComplete[5] = true;
                                        slowTxt("\n" + cName + " used the garbage to make a distraction...\n", 100);
                                        break;
                                    default:
                                        cWeapon = "500 Pound Laser-Guided Bomb";
                                        cDmgType = "Blunt";
                                        stats[6] = 120;
        
                                        slowTxt("\nCurrent Weapon Stats:\nWeapon: " + cWeapon + "\nDamage: " + stats[6] + "\nDamage Type: " + cDmgType + "\n", 100);
                                }
                            } else if (purchases[i].equals("Elixir of ___")) {
                                questComplete[4] = true;
                                slowTxt("\n" + cName + " drank the elixir...\n", 100);

                                switch (rand.nextInt(3)) {
                                    case 2:
                                        slowTxt("\nIt caused their stomach to feel funny...\n", 50);
                                        stats[3] += 2;
                                        stats[4] -= 2;
                                        break;
                                    case 1:
                                        slowTxt("\n" + cName + " feels funny...\n", 50);
                                        stats[1] += 25;
                                        break;
                                    case 0:
                                        slowTxt("\nThey immidiately threw up!\n", 50);
                                        stats[0] -= 10;
                                }
                            } else if (purchases[i].equals("Juggernog")) {
                                stats[0] = stats[1];
                                stats[0] += stats[0];
                                slowTxt("\n" + cName + " drank the liquid inside the red bottle without questioning it.\n\n", 100);
                            } else if (purchases[i].equals("Pre-Packaged Air -5lb Bottle-")) {
                                slowTxt("\nThe bottle was to heavy to carry...\n", 50);
                                clearConsole(500);
                                for (String piece: GLORBO)
                                    System.out.println(piece);
                                slowTxt("\n"+colour("Glorbo", "yellow")+": No refunds.", 50);
                                clearConsole(500);
                            } else if (purchases[i].equals("Tuna Sandwich")) {
                                questComplete[0] = true;
                                slowTxt("\n" + cName + " found the sandwich!\n", 100);
                            } else {
                                slowTxt("\n" + cName + " put the garbage in their pocket\n", 100);
                                pause(500);
                                continue;
                            }
                        }
                        clearConsole(500);
                    } else if (response.equals("2")) {
                        clearConsole(500);

                        if (glorboCheckpoint[2]) {
                            clearConsole(500);
                            if (infected) {
                                for (String piece: I_OPEN)
                                    System.out.println(piece);
                            } else {
                                for (String piece: L_OPEN)
                                    System.out.println(piece);
                            }
                            slowTxt("\n"+colour(cName, "green")+": Hey Glorbo!\n", 50);
    
                            clearConsole(500);
                            for (String piece: GLORBO)
                                System.out.println(piece);
                            slowTxt("\n"+colour("Glorbo", "yellow")+": Not you again.\n", 50);
                        }

                        if (!glorboCheckpoint[0]) {
                            for (String piece: GLORBO)
                                System.out.println(piece);
                            slowTxt("\n"+colour("Glorbo", "yellow")+": You from 'round 'ere?\n", 50);
                            System.out.print("\n1. Tell the truth\n2. Lie ["+skills[1]+"/30]\n\n" + cName + ": ");

                            if (playerSelection().equals("2")) { // Lies to glorbo about their background
                                clearConsole(500);
                                if (infected) {
                                    for (String piece: I_OPEN)
                                        System.out.println(piece);
                                } else {
                                    for (String piece: L_OPEN)
                                        System.out.println(piece);
                                }

                                if (skills[1] >= 30) { // Passes skill check
                                    if (background.equals("Unemployed") || background.equals("Dealer"))
                                        slowTxt("\n"+colour(cName, "green")+": No I'm from rural Nekomura.\n\n", 50);
                                    else
                                        slowTxt("\n"+colour(cName, "green")+": Yea but I'm from West Keji.\n\n", 50);
                                    clearConsole(500);

                                    for (String piece: GLORBO)
                                        System.out.println(piece);
                                    slowTxt("\n"+colour("Glorbo", "yellow")+": Ahh. Smells nicer 'n those parts.\n", 50);

                                    glorboTrust += 1;
                                } else { // Fails skill check
                                    if (background.equals("Unemployed") || background.equals("Dealer"))
                                        slowTxt("\n"+colour(cName, "green")+": Nope.\n\n", 50);
                                    else
                                        slowTxt("\n"+colour(cName, "green")+": Yep.\n\n", 50);
                                    clearConsole(500);

                                    for (String piece: GLORBO)
                                        System.out.println(piece);
                                    slowTxt("\n"+colour("Glorbo", "yellow")+": 'right.\n", 50);

                                    glorboTrust -= 1;
                                }

                                glorboCheckpoint[0] = true;
                            } else { // Tells Glorbo about where they came from
                                clearConsole(500);

                                if (infected) {
                                    for (String piece: I_OPEN)
                                        System.out.println(piece);
                                } else {
                                    for (String piece: L_OPEN)
                                        System.out.println(piece);
                                }

                                if (background.equals("Sushi")) {
                                    slowTxt("\n" + cName + ": No... I'm from West Keji. I have a Sushi shop there.\n", 70);
                                } else if (background.equals("Steel")) {
                                    slowTxt("\n" + cName + ": Not really, Im from rural Keji but I'm working and living here for the season.\n", 70);
                                } else if (background.equals("Farmer")) {
                                    slowTxt("\n" + cName + ": Nah, I'm from rural Keji. I have a farm out there but I came here for new opportunities...\n", 70);
                                } else if (background.equals("Dealer")) {
                                    slowTxt("\n" + cName + ": Yeah. Grew up on Greysand.", 70);
                                    glorboTrust += 1;
                                } else if (background.equals("CEO")) {
                                    slowTxt("\n" + cName + ": Of course not! I was born in Keji City Hospital... My father supplies their equipment.\n", 70);
                                    glorboTrust -= 1;
                                } else if (background.equals("Unemployed")) {
                                    slowTxt("\n" + cName + ": Something like that...\n", 70);
                                }

                                glorboTrust += 1;
                                glorboCheckpoint[0] = true;
                            }
                        }

                        if (!glorboCheckpoint[1]) {
                            clearConsole(700);

                            if (skills[1] >= 15) {
                                System.out.println("\n"+cName+":\n\n1. \"Why are you different?\"\n2. \"Are You from here?\"\n3. \"Can you lower the price?\" ["+skills[1]+"/40]\n");
                                response = playerSelection();

                                if (infected) {
                                    for (String piece: I_OPEN)
                                        System.out.println(piece);
                                } else {
                                    for (String piece: L_OPEN)
                                        System.out.println(piece);
                                }

                                switch (response) {
                                    case "1":
                                        if (skills[1] >= 25 && glorboTrust >= 1) {
                                            slowTxt("\n" + colour(cName, "green") + ": You're not Nekohito right.", 60);
                                            clearConsole(500);

                                            for (String piece: GLORBO)
                                                System.out.println(piece);
                                            slowTxt("\n"+colour("Glorbo", "yellow")+": Right. Got a passport with all my savin's and came 'ere.\n", 50);
                                            clearConsole(500);
                                            glorboTrust += 2;
                                        } else {
                                            slowTxt("\n" + colour(cName, "green") + ": Why you look like that tho.", 60);
                                            clearConsole(500);

                                            for (String piece: GLORBO)
                                                System.out.println(piece);
                                            slowTxt("\n"+colour("Glorbo", "yellow")+": ...\n", 50);
                                            clearConsole(500);
                                            glorboCheckpoint[2] = true;
                                        }

                                        break;
                                    case "2":
                                        if (skills[1] >= 25 && glorboTrust >= 1) {
                                            slowTxt("\n" + colour(cName, "green") + ": How long have you been living in Keji?\n", 60);
                                            clearConsole(500);

                                            for (String piece: GLORBO)
                                                System.out.println(piece);
                                            slowTxt("\n"+colour("Glorbo", "yellow")+": About 6 years... Been all over Nekomura though. Just set up shop here 4 months ago.\n        Was born in the Western Empire... but lost everything keeping me there a long time ago.\n", 50);
                                            clearConsole(500);
                                            glorboTrust += 2;
                                        } else {
                                            slowTxt("\n" + colour(cName, "green") + ": So are you like a tourist or something?\n", 60);
                                            clearConsole(500);

                                            for (String piece: GLORBO)
                                                System.out.println(piece);
                                            slowTxt("\n"+colour("Glorbo", "yellow")+": ...\n", 50);
                                            clearConsole(500);
                                            glorboCheckpoint[2] = true;
                                        }

                                        break;
                                    case "3":
                                        if (skills[1] >= 40 && glorboTrust >= 2 || glorboTrust >= 4) {
                                            slowTxt("\n" + colour(cName, "green") + ": Why don't we make a deal. You lower the prices, and I'll buy some garbage!\n", 60);
                                            clearConsole(500);

                                            for (String piece: GLORBO)
                                                System.out.println(piece);
                                            slowTxt("\n"+colour("Glorbo", "yellow")+": ", 60);
                                            slowTxt("Hhmmm...", 200);
                                            slowTxt(" Fine. You're the only one that stops by anyway.\n", glorboTrust);
                                            clearConsole(500);

                                            for (int i = 0; i < 5; i++) {
                                                garbageCost[i] /= 2;
                                                System.out.println(garbage[i] + " is now only " + garbageCost[i] + " doubloons!" );
                                                pause(200);
                                            }

                                            glorboCheckpoint[1] = true;
                                            clearConsole(500);
                                        } else {
                                            slowTxt("\n" + colour(cName, "green") + ": Do you price match?", 60);
                                            clearConsole(500);

                                            for (String piece: GLORBO)
                                                System.out.println(piece);
                                            slowTxt("\n"+colour("Glorbo", "yellow")+": ...\n", 50);
                                            clearConsole(500);
                                            glorboCheckpoint[2] = true;
                                        }

                                        break;
                                    default:
                                        slowTxt("\n" + colour(cName, "green") + ": ...", 60);
                                        clearConsole(500);

                                        for (String piece: GLORBO)
                                            System.out.println(piece);
                                        slowTxt("\n"+colour("Glorbo", "yellow")+": ...\n", 50);
                                        clearConsole(500);
                                }
                            }
                        }

                        clearConsole(500);
                        if (infected) {
                            for (String piece: I_OPEN)
                                System.out.println(piece);
                        } else {
                            for (String piece: L_OPEN)
                                System.out.println(piece);
                        }
                        slowTxt("\n"+colour(cName, "green")+": Soo... Uh-How was your day?\n", 50);

                        clearConsole(500);
                        for (String piece: GLORBO)
                            System.out.println(piece);
                        slowTxt("\n"+colour("Glorbo", "yellow")+": Mhmm...\n", 50);

                        clearConsole(500);
                        if (infected) {
                            for (String piece: I_OPEN)
                                System.out.println(piece);
                        } else {
                            for (String piece: L_OPEN)
                                System.out.println(piece);
                        }
                        slowTxt("\n"+colour(cName, "green")+": Cool. Cool.\n", 50);
                    } else if (response.equals("3")) { // Lets the player earn money based on their level & speech
                        clearConsole(500);
                        if (stats[2] > 25 && skills[1] >= 50) {
                            slowTxt(cName + " sold the garbage in their inventory. (+100)\n", 50);
                            stats[5] += 100;
                        } else if (stats[2] > 15) {
                            slowTxt(cName + " sold the garbage in their inventory. (+50)\n", 50);
                            stats[5] += 50;
                        } else if (stats[2] >= 10 && skills[1] >= 25) {
                            slowTxt(cName + " sold the garbage in their inventory. (+25)\n", 50);
                            stats[5] += 25;
                        } else if (stats[2] > 5 && skills[1] > 10) {
                            slowTxt(cName + " sold the garbage in their inventory. (+5)\n", 50);
                            stats[5] += 5;
                        } else {
                            slowTxt(cName + " sold the garbage in their inventory. (+1)\n", 50);
                            stats[5] += 1;
                        }
                        clearConsole(500);
                    } else if (response.equals("4")) { // Ends the while loop
                        inShop = false;
                        slowTxt("\n" + cName + " left the small shop.\n", 100);
                    }

                    clearConsole(700);
                }
            } else if (location.equals("Steel Road")) { // __________________________________________________ Faction 1 Area
                if (quest[1] != null && questComplete[1] == false) {
                    clearConsole(1000);
                    leftTalkingCats();
                    isSpeaking(colour("\n" + cName, "Green"), "Yo do you know where slasha is?");

                    clearConsole(1000);
                    rightTalkingCats();
                    if (stabbasRep > 0 || skills[1] >= 15 || skills[0] >= 25) {
                        isSpeaking(colour("\nYoung Stabba", "Purple"), "He should be in the house at the end of the street.\n\n");

                        clearConsole(500);
                        slowTxt(cName + " went to the safehouse.\n\n", 100);

                        clearConsole(500);
                        leftTalkingCats();
                        isSpeaking(colour(cName, "Green"), "Slasha! I am here for Slasha! Hello!");

                        clearConsole(500);
                        rightTalkingCats();
                        isSpeaking(colour("Slasha", "Purple"), "Uhh... Hi what do you need?");

                        clearConsole(500);
                        leftTalkingCats();
                        isSpeaking(colour(cName, "Green"), "Im here to... ");

                        System.out.println("\n\n1. Arrest You\n2. Kill You\n");
                        response = playerSelection();

                        if (response.equals("1")) {
                            if (skills[1] >= 30){
                                clearConsole(500);
                                leftTalkingCats();
                                isSpeaking(colour(cName, "Green"), "Im here to turn you in.");

                                clearConsole(500);
                                rightTalkingCats();
                                isSpeaking(colour(cName, "Green"), "Dan it! Not again...");

                                clearConsole(1000);
                                slowTxt(cName + " claimed the bounty on Manathan 'Slasha' Jhonoson, The South Steel Road Slasher. (+500)", 100);
                                questComplete[1] = true;
                                stats[5] += 500;
                            } else {
                                clearConsole(500);
                                leftTalkingCats();
                                isSpeaking(colour(cName, "Green"), "Im here to arrest you for your crimes!");

                                questComplete[1] = combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Slasha", 200, 20);
                                if (questComplete[1]) {
                                    clearConsole(1000);
                                    slowTxt(cName + " claimed the bounty on Manathan 'Slasha' Jhonoson, The South Steel Road Slasher. (+500)", 100);
                                    stats[5] += 500;                                    
                                } else {
                                    slowTxt("The bounty got away.", 100);
                                }
                            }
                        } else {
                            clearConsole(500);
                            leftTalkingCats();
                            isSpeaking(colour(cName, "Red"), "Im going to murder you legally...");

                            questComplete[1] = combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Slasha", 200, 20);
                            if (questComplete[1]) {
                                clearConsole(1000);
                                slowTxt(cName + " claimed the bounty on Manathan 'Slasha' Jhonoson, The South Steel Road Slasher. (+500)", 100);
                                stats[5] += 500;                                    
                            } else {
                                slowTxt("The bounty got away.", 100);
                            }
                        }
                    } else {
                        isSpeaking(colour("\nYoung Stabba", "Purple"), "Last I saw him he was upya.");

                        clearConsole(1000);
                        leftTalkingCats();
                        isSpeaking(colour("\n" + cName, "Green"), "What's upy...");

                        final String[] GOTTEM = {
                            "       /\\      /\\     ",
                            "      /  \\____/  \\    ",
                            "     / (.)   (.)  \\   ",
                            "    |     /_      |   ",
                            "    | |\\_______/| |   ",
                            "    | |I_I_I_I_I| |   ",
                            "    \\____________/    "
                        };

                        clearConsole(200);
                        talkingCats(SMOL, GOTTEM);
                        slowTxt(colour("\nYoung Stabba", "red") + ": ", 100);
                        for (int i = 0; i < 10; i++) {
                            slowTxt("HA", 25);
                        }
                        clearConsole(500);

                        slowTxt("\nThe kid stabbed " + cName + " and ran away.", 100);
                        stats[0] -= 15;
                        pause(200);
                    }
                }

                slowTxt("\n" + cName + " is in...\n", 100);
                // https://www.patorjk.com/software/taag/#p=display&f=Caligraphy&t=%20%20%20%20%20Stabbas%0ATerritory
                slowTxt(
                    "                                                                                                                   \n" + 
                    "                        |||||||                           |          |                                             \n" + 
                    "                      |       |||      |                ||         ||                                              \n" + 
                    "                     |         ||     ||                ||         ||                                              \n" + 
                    "                     ||        |      ||                ||         ||                                              \n" + 
                    "                      |||           ||||||||            ||         ||                       ||||                   \n" + 
                    "                     || |||        ||||||||     ||||    || ||||    || ||||       ||||      | |||| |                \n" + 
                    "                      ||| |||         ||       | |||  | ||| |||  | ||| |||  |   | |||  |  ||  ||||                 \n" + 
                    "                        ||| |||       ||      |   ||||  ||   ||||  ||   ||||   |   ||||  ||||                      \n" + 
                    "                          ||| |||     ||     ||    ||   ||    ||   ||    ||   ||    ||     |||                     \n" + 
                    "                            || |||    ||     ||    ||   ||    ||   ||    ||   ||    ||       |||                   \n" + 
                    "                             || ||    ||     ||    ||   ||    ||   ||    ||   ||    ||         |||                 \n" + 
                    "                              | |     ||     ||    ||   ||    ||   ||    ||   ||    ||    ||||  ||                 \n" + 
                    "                    |||        |      ||     ||    ||   ||    ||   ||    ||   ||    ||   | |||| |                  \n" + 
                    "                   |  |||||||||        ||     ||||| ||   |||||      |||||      ||||| ||     ||||                   \n" + 
                    "                  |     |||||                  |||   ||   |||        |||        |||   ||                           \n" + 
                    "                  |                                                                                                \n" + 
                    "                   ||                                                                                              \n" + 
                    "     ||||           |                                                                                              \n" + 
                    "    |  |||||||||||||                                        |         |                                            \n" + 
                    "   |     |||||||||                                         |||       ||                                            \n" + 
                    "   |     |  |                                               |        ||                                            \n" + 
                    "    ||  |  ||                   |||  ||||    |||  ||||             ||||||||    ||||    |||  ||||    ||   ||||      \n" + 
                    "       |  |||            |||     |||| |||| |  |||| |||| | |||     ||||||||    | |||  |  |||| |||| |  ||    |||  |  \n" + 
                    "      ||   ||           | |||     ||   ||||    ||   ||||   |||       ||      |   ||||    ||   ||||   ||     ||||   \n" + 
                    "      ||   ||          |   |||    ||           ||           ||       ||     ||    ||     ||          ||      ||    \n" + 
                    "      ||   ||         ||    |||   ||           ||           ||       ||     ||    ||     ||          ||      ||    \n" + 
                    "      ||   ||         ||||||||    ||           ||           ||       ||     ||    ||     ||          ||      ||    \n" + 
                    "       ||  ||         |||||||     ||           ||           ||       ||     ||    ||     ||          ||      ||    \n" + 
                    "        || |      |   ||          ||           ||           ||       ||     ||    ||     ||          ||      ||    \n" + 
                    "         |||     |    ||||    |   |||          |||          ||       ||      ||||||      |||          |||||||||    \n" + 
                    "          |||||||      |||||||     |||          |||         ||| |     ||      ||||        |||           |||| |||   \n" + 
                    "            |||         |||||                                |||                                              |||  \n" +
                    "                                                                                                       |||||   ||| \n" +
                    "                                                                                                     ||||||||  ||  \n" +
                    "                                                                                                    |      ||||    \n" +
                    "                                                                                                                   \n" +
                    "\n"
                , 1);

                slowTxt("\n" + cName + "'s Stabbas Reputation: " + stabbasRep + "\n", 100);

                if (stabbasRep <= -5 || shoottasRep >= 5 || isRat) {
                    String[] stabbas = {"Stabba", "Stabba", "Stabba"};
                    int[] stabHp = {(100 + stats[2] * 10) + 10, (100 + stats[2] * 10), 100};
                    int[] stabDmg = {10*stats[2], 10+stats[2]*10, 10+stats[2]};
                    slowTxt(cName + " isnt welcome around here...\n", 100);
                    if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Cleater", 130, 30)) {
                        slowTxt(cName + " defeated Cleater (+300)", 100);
                        stats[5] += 300;

                        if (!combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Steve", 115, 5)) {
                            slowTxt(cName + " spared Steve (+300)", 100);
                            stats[5] += 300;

                            if (!combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Bloy", 150, 37)) {
                                combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, stabbas, stabHp, stabDmg, "", 0, 0);
                            } else {
                                slowTxt(cName + " defeated Bloy (+300)", 100);
                                stats[5] += 300;

                                if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Shanka", 200, 50)) {
                                    slowTxt("The Steel Road is "+colour("flooded", "red")+"...\n", 100);
                                } else {
                                    clearConsole(300);
                                    slowTxt(cName + " gained respect for surviving that long.\n", 130);
                                    shoottasRep += 5;
                                    stabbasRep += 5;
                                }
                            }
                        } else {
                            combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, stabbas, stabHp, stabDmg, "", 0, 0);
                        }
                    } else {
                        if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Jhon Stab", 100, 10)) {
                            combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, stabbas, stabHp, stabDmg, "", 0, 0);
                        } else {
                            slowTxt(cName + " escaped from Steel Road.", 100);
                        }
                    }

                    clearConsole(500);
                    slowTxt(cName + " was stabbed by a bloody knife!", 100);
                    infected = true;
                } else if (stabbasRep < 0) {
                    slowTxt(cName + " should be careful around here...\n", 100);
                } else if (stabbasRep >= 5) {
                    slowTxt(cName + " gained some respect with the stabbas and can now do more things.\n", 100);

                    System.out.println("\n1. Roll Dice\n2. Stab Shoottas with friends\n3. Go home\n");

                    response = playerSelection();
                    if (response.equals("1")) {
                        stats[5] = dice(cName, stats[5], "Stabba", 1000);
                    } else if (response.equals("2")) {
                        String[] shoottas = {"Shootta", "Shootta", "Shootta"};
                        int[] shootHp = {(100 + stats[2] * 10) + 10, (100 + stats[2] * 10), 100};
                        int[] shootDmg = {10*stats[2], 10+stats[2]*10, 10+stats[2]};

                        combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, shoottas, shootHp, shootDmg, "Stabba", 200, 5*stats[2]);
                    }
                } else if (stabbasRep >= 0) {
                    slowTxt(cName + " can do some things to gain respect with the stabbas\n", 100);

                    System.out.println("\n1. Tag a wall (+1)\n2. Sell Nip (+3)\n3. Stab Shoottas (+5)\n");
                    response = playerSelection();

                    if (response.equals("1")) {
                        if (rand.nextBoolean() == true) {
                            slowTxt(cName + " tagged a liquor store.", 100);
                            stabbasRep += 1;
                        } else {
                            slowTxt(cName + " was stabbed for trying to tag a liquor store.", 100);
                            stats[0] -= 10;
                            infected = true;
                        }
                    } else if (response.equals("2")) {
                        if (rand.nextBoolean() == true) {
                            slowTxt(cName + " sold an ounce of stems and seeds.", 100);
                            stabbasRep += 3;
                        } else {
                            slowTxt(cName + " was stabbed for trying to sell an ounce of stems and seeds.", 100);
                            stats[0] -= 10;
                            infected = true;
                        }
                    } else if (response.equals("3")) {
                        if (rand.nextBoolean() == true) {
                            slowTxt(cName + " threw knives at shoottas on their way to the liquor store.", 100);
                            stabbasRep += 5;
                            shoottasRep -= 5;
                        } else {
                            slowTxt(cName + " was shot for trying to throw knives at shoottas.", 100);
                            stats[0] -= 38;
                        }
                    } else {
                        slowTxt(cName + " left Steel Road.", 100);
                    }
                }
            } else if (location.equals("Greysand Avenue")) { // __________________________________________________ Faction 2 Area
                if (quest[3] != null && questComplete[3] == false) {
                    slowTxt(cName + " delivered the parcel! (+300)", 100);
                    questComplete[3] = true;
                    stats[5] += 300;
                }

                if (!questComplete[9]) {
                    clearConsole(500);
                    if (!infected)
                        leftTalkingCats();
                    else
                        talkingCats(I_OPEN, SLEEP);
                    slowTxt("\n\n" + colour(cName, "green") + ": Yo do you know anyone that sells NipCigs?", 64);

                    clearConsole(500);
                    if (!infected)
                        rightTalkingCats();
                    else
                        talkingCats(I_CLOSED, SMOL);
                    slowTxt("\n\n" + colour("Nine", "green") + ": Yee I think Rick might be selling some in the Factory.", 64);
                }
                slowTxt("\n" + cName + " is in...\n", 100);
                // https://www.patorjk.com/software/taag/#p=display&f=Caligraphy&t=%20%20%20%20Shoottas%0ATerritory
                slowTxt(
                    "                                                                                                                \n" + 
                    "                  *******      *                                                                                \n" + 
                    "                *       ***  **                                  *         *                                    \n" + 
                    "               *         **  **                                 **        **                                    \n" + 
                    "               **        *   **                                 **        **                                    \n" + 
                    "                ***          **           ****       ****     ********  ********               ****             \n" + 
                    "               ** ***        **  ***     * ***  *   * ***  * ********  ********     ****      * **** *          \n" + 
                    "                *** ***      ** * ***   *   ****   *   ****     **        **       * ***  *  **  ****           \n" + 
                    "                  *** ***    ***   *** **    **   **    **      **        **      *   ****  ****                \n" + 
                    "                    *** ***  **     ** **    **   **    **      **        **     **    **     ***               \n" + 
                    "                      ** *** **     ** **    **   **    **      **        **     **    **       ***             \n" + 
                    "                       ** ** **     ** **    **   **    **      **        **     **    **         ***           \n" + 
                    "                        * *  **     ** **    **   **    **      **        **     **    **    ****  **           \n" + 
                    "              ***        *   **     **  ******     ******       **        **     **    **   * **** *            \n" + 
                    "             *  *********    **     **   ****       ****         **        **     ***** **     ****             \n" + 
                    "            *     *****       **    **                                             ***   **                     \n" + 
                    "            *                       *                                                                           \n" + 
                    "             **                    *                                                                            \n" + 
                    "                                  *                                                                             \n" + 
                    "                                 *                                                                              \n" + 
                    "                                                                                                                \n" + 
                    "                                                                                                                \n" + 
                    "  ****           *                                                                                              \n" + 
                    " *  *************                                        *         *                                            \n" + 
                    "*     *********                                         ***       **                                            \n" + 
                    "*     *  *                                               *        **                                            \n" + 
                    " **  *  **                   ***  ****    ***  ****             ********    ****    ***  ****    **   ****      \n" + 
                    "    *  ***            ***     **** **** *  **** **** * ***     ********    * ***  *  **** **** *  **    ***  *  \n" + 
                    "   **   **           * ***     **   ****    **   ****   ***       **      *   ****    **   ****   **     ****   \n" + 
                    "   **   **          *   ***    **           **           **       **     **    **     **          **      **    \n" + 
                    "   **   **         **    ***   **           **           **       **     **    **     **          **      **    \n" + 
                    "   **   **         ********    **           **           **       **     **    **     **          **      **    \n" + 
                    "    **  **         *******     **           **           **       **     **    **     **          **      **    \n" + 
                    "     ** *      *   **          **           **           **       **     **    **     **          **      **    \n" + 
                    "      ***     *    ****    *   ***          ***          **       **      ******      ***          *********    \n" + 
                    "       *******      *******     ***          ***         *** *     **      ****        ***           **** ***   \n" + 
                    "         ***         *****                                ***                                              ***  \n" + 
                    "                                                                                                    *****   *** \n" + 
                    "                                                                                                  ********  **  \n" + 
                    "                                                                                                 *      ****    \n" + 
                    "                                                                                                                \n" + 
                    "                                                                                                                "
                    
                    
                , 1);

                slowTxt("\n" + cName + "'s Shoottas Reputation: " + shoottasRep + "\n", 100);

                if (shoottasRep <= -5 || stabbasRep >= 5 || isRat) {
                    String[] shoottas = {"Shootta", "Shootta", "Shootta"};
                    int[] shootHp = {(100 + stats[2] * 10) + 10, (100 + stats[2] * 10), 100};
                    int[] shootDmg = {10*stats[2], 10+stats[2]*10, 10+stats[2]};
                    slowTxt(cName + " isnt welcome around here...\n", 100);
                    if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Fortey F.", 145, 45)) {

                        slowTxt(cName + " defeated Fortey Feigh (+450)", 100);
                        stats[5] += 450;
                        if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Tutu T.", 223, 23)) {

                            slowTxt(cName + " defeated Tutu Tres (+223)", 100);
                            stats[5] += 223;
                            if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Threo E.", 308, 38)) {

                                slowTxt(cName + " defeated Threo Heit (+308)", 100);
                                stats[5] += 308;
                                if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Fiddy Cal.", 355, 50)) {

                                    slowTxt(cName + " defeated Fiddy Caliebur (+500)\n", 100);
                                    stats[5] += 500;
                                    slowTxt("\nThe Greysand Avenue turned red...", 100);
                                } else {
                                    clearConsole(300);
                                    slowTxt(cName + " gained respect for surviving that long.\n", 130);
                                    shoottasRep += 5;
                                    stabbasRep += 5;
                                }
                            } else {
                                combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, shoottas, shootHp, shootDmg, "", 0, 0);
                            }
                        } else {
                            combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, shoottas, shootHp, shootDmg, "", 0, 0);
                        }
                    } else {
                        if (combat(cName, stats, cDmgRes, cDmgType, skills, damageMultipliers, "Nine", 199, 19)) {

                            slowTxt(cName + " defeated Nine (+199)", 100);
                            stats[5] += 199;

                            slowTxt("\n\nBut they got jumped by shoottas!\n", 100);
                            combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, shoottas, shootHp, shootDmg, "", 0, 0);
                        } else {
                            slowTxt(cName + " escaped from Greysand Avenue.", 100);
                        }
                    }

                    clearConsole(500);
                } else if (shoottasRep < 0) {
                    slowTxt(cName + " should be careful around here...\n", 100);
                }  else if (shoottasRep >= 5) {
                    slowTxt(cName + " gained some respect with the shoottas and can now do more things in Greysand Avenue.\n", 100);

                    System.out.println("\n1. Roll Dice\n2. Shoot Stabbas\n3. Go home\n");

                    response = playerSelection();
                    if (response.equals("1")) {
                        stats[5] = dice(cName, stats[5], "Shootta", 1000);
                    } else if (response.equals("2")) {
                        String[] stabbas = {"Stabba", "Stabba", "Stabba"};
                        int[] stabHp = {(100 + stats[2] * 10) + 10, (100 + stats[2] * 10), 100};
                        int[] stabDmg = {10*stats[2], 10+stats[2]*10, 10+stats[2]};

                        combatTwo(cName, stats, cDmgRes, skills, damageMultipliers, cDmgType, stabbas, stabHp, stabDmg, "Shootta", 200, 5*stats[2]);
                    }
                } else if (shoottasRep >= 0) {
                    slowTxt(cName + " can do some things to gain respect with the Shoottas\n", 100);

                    System.out.println("\n1. Tag a wall (+1)\n2. Sell Nip (+3)\n3. Shoot Stabbas (+5)\n");
                    response = playerSelection();

                    if (response.equals("1")) {
                        if (rand.nextBoolean() == true) {
                            slowTxt(cName + " tagged a liquor store.", 100);
                            shoottasRep += 1;
                        } else {
                            slowTxt(cName + " was shot for trying to tag a liquor store.", 100);
                            stats[0] -= 20;
                        }
                    } else if (response.equals("2")) {
                        if (rand.nextBoolean() == true) {
                            slowTxt(cName + " sold an ounce of stems and seeds.", 100);
                            shoottasRep += 3;
                        } else {
                            slowTxt(cName + " was shot for trying to sell an ounce of stems and seeds.", 100);
                            stats[0] -= 20;
                        }
                    } else if (response.equals("3")) {
                        if (rand.nextBoolean() == true) {
                            slowTxt(cName + " shot at stabbas on their way to the liquor store.", 100);
                            shoottasRep += 5;
                            stabbasRep -= 5;
                        } else {
                            slowTxt(cName + " was stabbed for trying to shoot stabbas.", 100);
                            stats[0] -= 10;
                        }
                    } else {
                        slowTxt(cName + " left G. Ave.", 100);
                    }
                }
            } else if (location.equals("Tetanus Tapwater")) { // __________________________________________________ Saloon
                clearConsole(1000);
                slowTxt(cName + " walks into a bar...\n", 40);
                boolean inPub = true;
                int alcLvl = 0;

                do {
                    System.out.println("\n1. Buy a drink\n2. Look at the job board\n3. Leave tavern\n");

                    response = playerSelection();
                    if (response.equals("1")) {
                        String[] drinkMenu = {
                            "Booz's Brew",
                            "'Tequila'",
                            "Uncarbonated Water",
                            "Shine",
                            "Juice"
                        };
                        drinkMenu[4] = (orbs)? "Orb of Liquid": "Juice";
                        int[] drinksCost = {3,4,5,2,3};

                        String[] drinksBought = shopping(cName, stats, "Booz", drinkMenu, drinksCost);

                        clearConsole(500);
                        slowTxt(colour("\nMoney", "Yellow") + ": " + stats[5] + "\n\n", 100);

                        for (int i = 0; i < 10; i++) {
                            int j = i;
                            if (drinksBought[i] == null)
                                continue;
                            else 
                                j++;
                            if (drinksBought[i].equals("Booz's Brew")) {
                                slowTxt(cName + " drank the beer", 100);
                                alcLvl += 1;
                            } else if (drinksBought[i].equals("'Tequila'")) {
                                slowTxt(cName + " took a shot of 'tequila'", 100);
                                alcLvl += 3;
                            } else if (drinksBought[i].equals("Uncarbonated Water")) {
                                slowTxt(cName + " drank water", 100);
                                alcLvl -= 2;
                            } else if (drinksBought[i].equals("Shine")) {
                                slowTxt(cName + " drank the liquid", 100);
                                alcLvl += 2;
                            } else if (drinksBought[i].equals("Juice")) {
                                slowTxt(cName + " juiced", 100);
                                alcLvl -= 1;
                            } else if (drinksBought[i].equals("Orb of Liquid")) {
                                slowTxt(cName + " gundered the Orb of Liquid", 100);
                                alcLvl += 5;
                            }

                            if (j > i && i != 10)
                                System.out.println(", and");
                        }

                        System.out.println("");

                        if (alcLvl >= 10) {
                            slowTxt(cName + " is hammered...\n", 100);

                            clearConsole(1000);
                            leftTalkingCats();
                            isSpeaking(colour(cName, "Green"), "yO-u CaNtnOT! tElL.. me... whEn iVe 'ad eNoUgh\n");

                            clearConsole(1000);
                            rightTalkingCats();
                            isSpeaking(colour("Bouncer", "Red"), "You gotta leave now or youre going to spend a night in the dumpster.\n");
                            if (skills[1] >= 20) {
                                clearConsole(1000);
                                leftTalkingCats();
                                System.out.print(colour(cName, "Green") + ": ");

                                response = playerSelection();
                            } else {
                                clearConsole(1000);
                                leftTalkingCats();
                                isSpeaking(colour(cName, "Green"), "iMon dAgOoCoosH aNacaHal\n");
                            }

                            clearConsole(1000);
                            rightTalkingCats();
                            isSpeaking(colour("Bouncer", "Red"), "What!?\n");

                            if (skills[1] >= 30) {
                                clearConsole(1000);
                                leftTalkingCats();
                                System.out.print(colour(cName, "Green") + ": ");

                                response = playerSelection();
                                
                                clearConsole(1000);
                                rightTalkingCats();
                                isSpeaking(colour("Bouncer", "Red"), "Just stay out of trouble.\n");
                            } else {
                                clearConsole(1000);
                                leftTalkingCats();
                                isSpeaking(colour(cName, "Green"), "yoR mamAs uh quEen\n");

                                clearConsole(1000);
                                rightTalkingCats();
                                isSpeaking(colour("Bouncer", "Red"), "That does it buster!\n");

                                clearConsole(1000);
                                slowTxt(cName + " was kicked out of the pub.", 100);
                                inPub = false;
                                continue;
                            }
                            
                        } else if (alcLvl >= 5) {
                            slowTxt(cName + " is drunk...\n", 100);

                            clearConsole(1000);
                            rightTalkingCats();
                            isSpeaking(colour("Bouncer", "Red"), "You've had enough pal.\n");

                            clearConsole(1000);
                            leftTalkingCats();
                            isSpeaking(colour(cName, "Green"), "nuH-*burps*-uH\n");
                        } else if (alcLvl >= 1) {
                            slowTxt(cName + " is tipsy...\n", 100);
                        }

                        if (alcLvl > 15) {
                            clearConsole(1000);
                            rightTalkingCats();
                            isSpeaking(colour("Bouncer", "Red"), "Thats it buster!\n\n");

                            slowTxt(cName + " was kicked out of the pub.\n", 100);
                            inPub = false;
                        }
                    } else if (response.contains("2")) {
                        slowTxt("\n" + cName + " checks the job board...\n\n", 100);

                        slowTxt(
                          "+--------------+\n"
                        + "| 1. Bounty    |\n"
                        + "+--------------+\n"
                        + "| 2. Find the  |\n"
                        + "+--------------+\n"
                        + "| 3. Delivery  |\n"
                        + "+--------------+\n\n"
                        , 50);

                        switch (playerSelection()) {
                            case "1":
                                slowTxt(
                                    "\n+----------+\n"
                                    + "| !Wanted! |\n"
                                    + "+ ________ +\n"
                                    + "| | " + colour(">:3", "red") + "  | |\n"
                                    + "+ 'Slasha' +\n"
                                    + "| Rwrd 500 |\n"
                                    + "+----------+\n"
                                , 50);
                                System.out.println("\n\n1. Accept the job\n2. Leave job on the board\n");

                                if (playerSelection().equals("1") && !questComplete[1]) {
                                    quest[1] = "Kill the South-Steel Slasha";
                                    questComplete[1] = false;
                                    slowTxt(colour("\nBooz", "Yellow") + ": 'Slasha' is some gangster from Steel Rd. that pissed off the wrong guy ig.\n", 100);
                                } else{
                                    slowTxt(colour("\n" + cName, "Green")+ ": That seems dangerous.\n", 100);
                                }
                               break;
                            case "2":
                                slowTxt(
                                    "\n+----------+\n"
                                    + "| Find the |\n"
                                    + "+ thing in +\n"
                                    + "| that one |\n"
                                    + "+ place... +\n"
                                    + "| Rwrd  ?  |\n"
                                    + "+----------+\n"
                                , 50);
                                System.out.println("\n1. Accept the job\n2. Leave job on the board\n");

                                if (playerSelection().equals("1") && !questComplete[2]) {
                                    quest[2] = "Find the What?";
                                    questComplete[2] = false;
                                    slowTxt(colour("Booz", "Yellow") + ": Some guy is looking for his       that he lost at the factory.\n", 70);
                                } else{
                                    slowTxt(colour(cName, "Green")+ ": No reward. No thanks.\n", 100);
                                }
                                break;
                            case "3":
                                slowTxt(
                                    "\n+----------+\n"
                                    + "| Take the |\n"
                                    + "+ thing to +\n"
                                    + "| that one |\n"
                                    + "+ place... +\n"
                                    + "| Rwrd 300 |\n"
                                    + "+----------+\n"
                                , 50);
                                System.out.println("\n1. Accept the job\n2. Leave job on the board\n");

                                if (playerSelection().equals("1") && !questComplete[3]) {
                                    quest[3] = "Same Decade Delivery";
                                    questComplete[3] = false;
                                    slowTxt(colour("\nBooz", "Yellow") + ": Take this parcel to this address.\n", 100);
                                    slowTxt("\nBooz hands " + cName + " a paper with 'To: 130 W Greysand Ave' written on it.\n", 100);
                                } else{
                                    slowTxt(colour(cName, "Green")+ ": I dont have time for that.\n", 100);
                                }
                                break;
                            default:
                                slowTxt("Nothing caught " + cName + "'s interest.\n", 100);
                        }
                    } else if (response.contains("3")) {
                        slowTxt("\n" + cName + " left and didnt close the door...\n", shoottasRep);
                        inPub = false;
                    }

                    clearConsole(1000);
                    turns++;
                } while (inPub);
            } else if (location.equals("The Sino")) {
                // "The Sino" and the 3 minigames are fully original, but inspired by The Diamond from GTA: V
                clearConsole(1000);
                slowTxt(cName + " walked into a building that smelled like cigarettes...\n", 100);
                clearConsole(710);

                boolean inSino = true;
                int chips = 10;

                final String[] BOBER = {
                    "              _(o)____(o)_    ",
                    "             /            \\   ",
                    "            | .         . |   ",
                    "            |     Y       |   ",
                    "            |    -UU-     |   ",
                    "            \\____________/    "
                };

                String[] faces = {
                    "+---+\n" +
                    "| P |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| A |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 2 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 3 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 4 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 5 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 6 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 7 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 8 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| 9 |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| X |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| Y |\n" +
                    "+---+\n",

                    "+---+\n" +
                    "| Z |\n" +
                    "+---+\n",
                };

                for (String piece: BOBER)
                    System.out.println(piece);
                slowTxt("\n"+colour("Bober", "yellow")+": Welcome to The Sino where you can become a millionaire in hours!\n", 50);

                do {
                    clearConsole(500);

                    if (stats[5] < -500) {
                        for (String piece: BOBER)
                            System.out.println(piece);
                        slowTxt("\n"+colour("Bober", "yellow")+": Ahh bad news. Your doubloon chip declined... You have to leave.\nOr you can sign this contract and I'll buy your debt.\n", 50);
                        if (contract) {
                            clearConsole(300);
                            stats[7] += stats[5];
                            stats[5] = 0;

                            if (stats[7] < -1000) {
                                for (String piece: BOBER)
                                    System.out.println(piece);
                                slowTxt("\n"+colour("Bober", "yellow")+": Ahh. You broke the contract.\nYour debt is at " + stats[7] + "... Thats over your limit.\n", 70);

                                clearConsole(500);
                                slowTxt(cName + " broke the contract...\n", 100);
                                contract = false;
                                inSino = false;
                                System.out.println("\nBober took one of " + cName + "'s organs...\n");
                                
                                stats[3]--;
                
                                if (stats[3] < 0) {
                                    System.out.println(cName + " ran out of lives...");
                                    System.out.println(cName + "'s journey ended unexpectedly.");
                                    clearConsole(2000);
                                    slowTxt(cName + " got the Last Hand ending!\n\n\n", 100);

                                    System.out.println(colour(
                                        "Final Character Stats:\n\n" +
                            
                                        "Name - " + cName + "\n" +
                                        "Health - " + stats[0] + "/" + stats[1] + "\n" +
                                        "Level - " + stats[2] + "\n" +
                                        "Lives - " + stats[3] + "\n" +
                                        "Luck - " + stats[4] + "\n" +
                                        "Doubloons - " + stats[5] + "\n\n" +
                            
                                        "Weapon - " + cWeapon + "\n" +
                                        "Damage - "+ stats[6] +"\n" +
                                        "Damage Type - " + cDmgType + "\n\n" +
                            
                                        "Armour - " + armour + "\n" +
                                        "Damage Resistance - " + cDmgRes + "\n\n" +
                            
                                        "Skills:\n" +
                                        "Strength (" + skills[0] + ")\n" +
                                        "Speech (" + skills[1] + ")\n" +
                                        "Stamina (" + skills[2] + ")\n" +
                                        "Sneak (" + skills[3] + ")\n\n" +
                            
                                        "Damage Multipliers:\n" +
                                        "Sharp (" + damageMultipliers[0] + ")\n" +
                                        "Blunt (" + damageMultipliers[1] + ")\n" +
                                        "Elemental (" + damageMultipliers[2] + ")\n" +
                                        "Ranged (" + damageMultipliers[3] + ")\n\n"
                                    , "CYAN"));
                                    input.close();
                                    System.exit(5);
                                }

                                System.out.println("\n" + cName + " woke up in a dumpster...\n");
                                slowTxt("Lives left: " + stats[3] + "\n\n", 130);
                                stats[4] += 1;
                                stats[0] = stats[1];
                                stats[5] = stats[7];
                                stats[7] = 0;
                                continue;
                            }
                        } else {
                            System.out.println("\n" + cName + " has negative doubloons!\n\n1. Sign a Insurance Contract (-1000 Limit)\n2. Leave anyway\n");

                            switch (playerSelection()) {
                                case "1": 
                                    contract = true;
                                    break;
                                default:
                                    inSino = false;
                            }
                        }
                        continue;
                    }

                    for (String piece: BOBER)
                        System.out.println(colour(piece, "yellow"));
                    slowTxt("\n"+colour("Bober", "yellow")+": Pick a game!\n", 10);

                    System.out.println("\nMoney: " + stats[5] + "\nChips: " + chips);
                    if (stats[7] < 0)
                        System.out.println("Debt: " + stats[7]);
                    System.out.println("\n1. Play 'Roller'\n2. Play 'Greybob'\n3. Play 'Ponkler'\n4. Change Chips\n5. Leave The Sino\n");

                    if (helpMe)
                        slowTxt("\n\nYou can type in 'help' to show rules for the mini games.\n\n", 100);
                    response = playerSelection();

                    if (response.equals("1")) {
                        slowTxt("\n"+colour("Bober", "yellow")+": You can bet on cyan(odd), magenta(even), green(0): ", 30);
                        response = playerSelection();

                        int ball = rand.nextInt(33);

                        for (int i = 0; i < 3; i++) {
                            clearConsole(300 + i*100);
                            System.out.println(
                                "    _____    \n" +
                                "  /"+colour("\\", "cyan")+"    "+colour("/", "purple")+"\\  \n" +
                                " / ."+colour("\\", "cyan")+"  "+colour("/", "purple")+"  \\ \n" +
                                "|"+colour("____", "green")+colour("\\", "cyan")+colour("/", "purple")+colour("____", "cyan")+"| \n" +
                                "|    "+colour("/", "cyan")+colour("\\", "purple")+"    | \n" +
                                " \\  "+colour("/", "cyan")+"  "+colour("\\", "purple")+"  / \n" +
                                "  \\"+colour("/", "cyan")+"____"+colour("\\", "purple")+"/    \n"
                            );
    
                            clearConsole(300 + i*100);
                            System.out.println(
                                "    _____    \n" +
                                "  /"+colour("\\", "cyan")+"    "+colour("/", "purple")+"\\  \n" +
                                " / ."+colour("\\", "cyan")+"  "+colour("/", "purple")+"  \\ \n" +
                                "|"+colour("____", "purple")+colour("\\", "cyan")+colour("/", "purple")+colour("____", "cyan")+"| \n" +
                                "|    "+colour("/", "green")+colour("\\", "purple")+"    | \n" +
                                " \\  "+colour("/", "green")+"  "+colour("\\", "purple")+"  / \n" +
                                "  \\"+colour("/", "green")+"____"+colour("\\", "purple")+"/    \n"
                            );
    
                            clearConsole(300 + i*100);
                            System.out.println(
                                "    _____    \n" +
                                "  /"+colour("\\", "cyan")+"    "+colour("/", "purple")+"\\  \n" +
                                " / ."+colour("\\", "cyan")+"  "+colour("/", "purple")+"  \\ \n" +
                                "|"+colour("____", "purple")+colour("\\", "cyan")+colour("/", "purple")+colour("____", "cyan")+"| \n" +
                                "|    "+colour("/", "cyan")+colour("\\", "green")+"    | \n" +
                                " \\  "+colour("/", "cyan")+"  "+colour("\\", "green")+"  / \n" +
                                "  \\"+colour("/", "cyan")+"____"+colour("\\", "green")+"/    \n"
                            );
    
                            clearConsole(300 + i*100);
                            System.out.println(
                                "    _____    \n" +
                                "  /"+colour("\\", "cyan")+"    "+colour("/", "purple")+"\\  \n" +
                                " / ."+colour("\\", "cyan")+"  "+colour("/", "purple")+"  \\ \n" +
                                "|"+colour("____", "purple")+colour("\\", "cyan")+colour("/", "purple")+colour("____", "green")+"| \n" +
                                "|    "+colour("/", "cyan")+colour("\\", "purple")+"    | \n" +
                                " \\  "+colour("/", "cyan")+"  "+colour("\\", "purple")+"  / \n" +
                                "  \\"+colour("/", "cyan")+"____"+colour("\\", "purple")+"/    \n"
                            );
    
                            clearConsole(300 + i*100);
                            System.out.println(
                                "    _____    \n" +
                                "  /"+colour("\\", "cyan")+"    "+colour("/", "green")+"\\  \n" +
                                " / ."+colour("\\", "cyan")+"  "+colour("/", "green")+"  \\ \n" +
                                "|"+colour("____", "purple")+colour("\\", "cyan")+colour("/", "green")+colour("____", "cyan")+"| \n" +
                                "|    "+colour("/", "cyan")+colour("\\", "purple")+"    | \n" +
                                " \\  "+colour("/", "cyan")+"  "+colour("\\", "purple")+"  / \n" +
                                "  \\"+colour("/", "cyan")+"____"+colour("\\", "purple")+"/    \n"
                            );
    
                            clearConsole(300 + i*100);
                            System.out.println(
                                "    _____    \n" +
                                "  /"+colour("\\", "green")+"    "+colour("/", "purple")+"\\  \n" +
                                " / ."+colour("\\", "green")+"  "+colour("/", "purple")+"  \\ \n" +
                                "|"+colour("____", "purple")+colour("\\", "green")+colour("/", "purple")+colour("____", "cyan")+"| \n" +
                                "|    "+colour("/", "cyan")+colour("\\", "purple")+"    | \n" +
                                " \\  "+colour("/", "cyan")+"  "+colour("\\", "purple")+"  / \n" +
                                "  \\"+colour("/", "cyan")+"____"+colour("\\", "purple")+"/    \n"
                            );
                        }

                        slowTxt("\nThe ball landed on... " + ball + "!\n\n", 70);
                        pause(500);

                        if (response.contains("c") || response.contains("o")) {

                            if (ball == 0) {
                                slowTxt(cName + " lost " + chips + " doubloons!", 50);
                                stats[5] -= chips;
                            } else if (ball % 2 == 0) {
                                slowTxt(cName + " lost " + chips + " doubloons!", 50);
                                stats[5] -= chips;
                            } else {
                                slowTxt(cName + " won " + chips + " doubloons!", 50);
                                stats[5] += chips;
                            }
                        } else if (response.equalsIgnoreCase("m") || response.contains("ev")) {
                            if (ball == 0) {
                                slowTxt(cName + " lost " + chips + " doubloons!", 50);
                                stats[5] -= chips;
                            } else if (ball % 2 == 0) {
                                slowTxt(cName + " won " + chips + " doubloons!", 50);
                                stats[5] += chips;
                            } else {
                                slowTxt(cName + " lost " + chips + " doubloons!", 50);
                                stats[5] -= chips;
                            }
                        } else if (response.contains("0")|| response.contains("g")) {
                            if (ball == 0) {
                                slowTxt(cName + " won " + chips + " doubloons!", 50);
                                stats[5] += chips*2;
                            } else if (ball % 2 == 0) {
                                slowTxt(cName + " lost " + chips + " doubloons!", 50);
                                stats[5] -= chips;
                            } else {
                                slowTxt(cName + " lost " + chips + " doubloons!", 50);
                                stats[5] -= chips;
                            }
                        }

                        pause(300);
                    } else if (response.equals("2")) {
                        slowTxt("\nDrawing Cards...\n\n", 100);

                        int cCard1 = rand.nextInt(13);
                        int cCard2 = rand.nextInt(13);

                        int dCard1 = rand.nextInt(13);
                        int dCard2 = rand.nextInt(13);

                        int cValue = cCard1 + cCard2;
                        int dValue = dCard1 + dCard2;

                        slowTxt(cName + "'s cards:\n" + faces[cCard1] + "\n" + faces[cCard2] + "\nValue: "+cValue+"\n", 50);
                        slowTxt("Bober's cards:\n" + faces[dCard1] + "\n" + faces[dCard2] + "\nValue: "+dValue+"\n", 50);
                        slowTxt("\nDeciding Winner...\n", 100);

                        if (cValue == 19) {
                            if (cValue == dValue) {
                                slowTxt("Its a tie!", 100);
                            } else {
                                slowTxt(cName + " got Greybob and won "+chips*2+"!", 100);
                                stats[5] += chips*2;
                            }
                        } else if (cValue > 20) {
                            if (dValue <= 20) {
                                slowTxt(cName + " busted!\n", 100);
                                stats[5] -= chips;
                            } else {
                                slowTxt("Its a tie!\n", 100);
                            }
                        } else if (cValue == dValue) {
                            slowTxt("Its a tie!\n", 100);
                        } else if (cValue < dValue) {
                            if (dValue > 20) {
                                slowTxt("Bober busted and " + cName + " won " + chips + "!", 70);
                                stats[5] += chips;
                            } else {
                                slowTxt(cName + " lost " + chips + ".", 100);
                                stats[5] -= chips;
                            }
                        } else {
                            slowTxt(cName + " won " + chips + "!", 100);
                            stats[5] += chips;
                        }

                        clearConsole(2000);
                    } else if (response.equals("3")) {
                        int[] cHand = new int[5];
                        int[] dHand = new int[5];

                        slowTxt("\nDrawing " + cName + "'s Cards...\n\n", 100);
                        for (int i = 0; i < 5; i++) {
                            cHand[i] = rand.nextInt(13);

                            if (cHand[i] == 0) {
                                System.out.println("\n" + cName + " has a Ponkler card! You can trade it for a...\n");
                                System.out.println("1. Ace\n2. X-Card\n3. Y-Card\n4. Z-Card\n5. Keep Ponkler\n");

                                switch (playerSelection()) {
                                    case "1": cHand[i] = 1; break;
                                    case "2": cHand[i] = 10; break;
                                    case "3": cHand[i] = 11; break;
                                    case "4": cHand[i] = 12; break;
                                    default: slowTxt(cName + " kept the Ponkler card...", 50);
                                }
                            }
                        }

                        // Displays player's hand
                        for (int i = 0; i < 5; i++) {
                            System.out.print(faces[cHand[i]]);
                            pause(300);
                        }

                        slowTxt("Drawing Bober's Cards...\n\n", 100);
                        for (int i = 0; i < 5; i++) {
                            dHand[i] = rand.nextInt(13);

                            if (dHand[i] == 0) {
                                slowTxt("\nBober got a Ponkler, and traded it for a ", 70);
                                if (i > 0) {
                                    switch (dHand[0]) {
                                        case 1: dHand[i] = 1; slowTxt("Ace.\n\n", 100); break;
                                        case 10: dHand[i] = 10; slowTxt("X-Card.\n\n", 100); break;
                                        case 11: dHand[i] = 11; slowTxt("Y-Card.\n\n", 100); break;
                                        case 12: dHand[i] = 12; slowTxt("Z-Card.\n\n", 100); break;
                                        default:
                                    }
                                } else {
                                    dHand[i] = 12;
                                    slowTxt("Z-Card.\n\n", 100);
                                }
                            }
                        }

                        // Displays Bober's hand
                        for (int i = 0; i < 5; i++) {
                            System.out.print(faces[dHand[i]]);
                            pause(300);
                        }

                        if (dHand[0] == dHand[1] && dHand[0] == dHand[2] && dHand[0] == dHand[3] && dHand[0] == dHand[4]) {
                            if (cHand[0] == cHand[1] && cHand[0] == cHand[2] && cHand[0] == cHand[3] && cHand[0] == cHand[4]) {
                                slowTxt("\n" + cName + " avoided the critical!\n\n", 100);
                                System.out.println("Its a miraculous tie!\n\n\n");

                                for (String piece: BOBER)
                                System.out.println(colour(piece, "yellow"));
                                slowTxt("\n"+colour("Bober", "yellow")+": Kurwa! I've never seen that before!\n", 10);
                                System.out.println("Bober gave " + cName + " the Dragonn KLR 20mm Anti-Matiriel Rifle for surviving the crit!\n1. Equip it\n2. Leave it\n");

                                if (playerSelection().equals("1")) {
                                    cWeapon = "Dragonn KLR 20mm Anti-Matiriel Rifle!";
                                    stats[6] = 300;
                                    cDmgType = "Ranged";
                                    slowTxt("\n" + cName + " equipped the Anti-Matiriel Rifle!\n\n", 100);
                                }

                                pause(500);
                            } else {
                                slowTxt("\nBober got critical! " + cName + " lost " + chips*2 + " and was slapped in the face by Bober.", 100);
                                stats[5] -= chips*2;
                                stats[0] -= 15;
                            }
                        } else if (cHand[0] == cHand[1] && cHand[0] == cHand[2] && cHand[0] == cHand[3] && cHand[0] == cHand[4]) {
                            slowTxt("\n" + cName + " got a critical and won "+chips*2+"!\n", 100);
                            stats[5] += chips*2;
                            pause(500);
                        } else if (cHand[0] == cHand[1] || cHand[0] == cHand[2] || cHand[0] == cHand[3] || cHand[0] == cHand[4]) {
                            if (dHand[0] == dHand[1] || dHand[0] == dHand[2] || dHand[0] == dHand[3] || dHand[0] == dHand[4]) {
                                if ((cHand[0] == cHand[1]  && cHand[0] == cHand[2]) || (cHand[0] == cHand[2] && cHand[0] == cHand[3]) || (cHand[0] == cHand[3] && cHand[0] == cHand[4]) || (cHand[0] == cHand[4] && cHand[0] == cHand[2]) || (cHand[0] == cHand[4] && cHand[0] == cHand[1]) || (cHand[0] == cHand[1] && cHand[0] == cHand[3])) {
                                    slowTxt("Bober pulled out a 12 guage shotgun and shot " + cName + " in the face...", 100);
                                } else if (cHand[0] >= dHand[0]) {
                                    if (cHand[0] == dHand[0]) {
                                        slowTxt("\n" + cName + " tied with Bober!\n", 100);
                                    } else {
                                        slowTxt("\n" + cName + " won "+chips+"!\n", 100);
                                        stats[5] += chips;
                                    }

                                    pause(500);
                                } else {
                                    slowTxt("\n" + cName + " lost "+chips+"!\n", 100);
                                    stats[5] -= chips;
                                    pause(500);
                                }

                                pause(500);
                            } else {
                                slowTxt("\n" + cName + " won "+chips+"!\n", 100);
                                stats[5] += chips;
                                pause(500);
                            }
                        } else if (dHand[0] == dHand[1] || dHand[0] == dHand[2] || dHand[0] == dHand[3] || dHand[0] == dHand[4]) {
                            slowTxt("\n" + cName + " lost "+chips+"!\n", 100);
                            stats[5] += chips;
                        } else {
                            slowTxt("\n" + cName + " tied with Bober...\n", 100);
                            pause(500);
                        }

                        clearConsole(1500);
                    } else if (response.equals("4")) {
                        boolean betSet = false;
                        do {
                            slowTxt("Current Chips: " + chips + "\n", 30);
                            System.out.println("\n1. Increase chips by +1\n2. Increase chips by +10\n3. Increase chips by +100\n4. Decrease chips by -1\n5. Decrease chips by -10\n6. Decrease chips by -100\n7. Go back\n");

                            switch (playerSelection()) {
                                case "1": chips += 1; break;
                                case "2": chips += 10; break;
                                case "3": chips += 100; break;
                                case "4": chips -= 1; break;
                                case "5": chips -= 10; break;
                                case "6": chips -= 100; break;
                                case "7": betSet = true; break;
                                default: slowTxt("Bober stared at " + cName + " blankly...", 100);
                            }

                            clearConsole(500);
                        } while (!betSet);
                    } else if (response.equals("5")) {
                        if (!contract && chips > stats[5]) {
                            for (String piece: BOBER)
                                System.out.println(piece);
                            slowTxt("\n"+colour("Bober", "yellow")+": You need debt insurance to bet more chips than your doubloons...\n", 70);

                            clearConsole(500);
                            for (String piece: BOBER)
                                System.out.println(piece);
                            slowTxt("\n"+colour("Bober", "yellow")+": Sign this contract. I buy your debt and you dont leave without negative doubloons. Youll have a limit of -1000.\n", 70);

                            System.out.println("\n1. Sign Insurance Contract\n2. Change chips to max doubloons\n");

                            if (playerSelection().equals("1")) {
                                contract = true;
                                slowTxt("\n" + cName + " signed the contract. Now Bober will buy their negative doubloons when the leave The Sino.\n", chips);
                            }
                        }

                        if (stats[5] < 0) {
                            if (contract) {
                                stats[7] += stats[5];
                                stats[5] = 0;

                                if (stats[7] < -1000) {
                                    for (String piece: BOBER)
                                        System.out.println(piece);
                                    slowTxt("\n"+colour("Bober", "yellow")+": Ahh. You broke the contract.\n", 70);

                                    clearConsole(500);
                                    slowTxt(cName + " broke the contract...\n", 100);
                                    contract = false;
                                    inSino = false;
                                    System.out.println("\nBober took one of " + cName + "'s organs...\n");
                                    
                                    stats[3]--;
                    
                                    if (stats[3] < 0) {
                                        System.out.println(cName + " ran out of lives...");
                                        System.out.println(cName + "'s journey ended unexpectedly.");
                                        clearConsole(2000);
                                        slowTxt(cName + " got the Heartbreaker ending!\n\n\n", 100);

                                        System.out.println(colour(
                                            "Final Character Stats:\n\n" +
                                
                                            "Name - " + cName + "\n" +
                                            "Health - " + stats[0] + "/" + stats[1] + "\n" +
                                            "Level - " + stats[2] + "\n" +
                                            "Lives - " + stats[3] + "\n" +
                                            "Luck - " + stats[4] + "\n" +
                                            "Doubloons - " + stats[5] + "\n\n" +
                                
                                            "Weapon - " + cWeapon + "\n" +
                                            "Damage - "+ stats[6] +"\n" +
                                            "Damage Type - " + cDmgType + "\n\n" +
                                
                                            "Armour - " + armour + "\n" +
                                            "Damage Resistance - " + cDmgRes + "\n\n" +
                                
                                            "Skills:\n" +
                                            "Strength (" + skills[0] + ")\n" +
                                            "Speech (" + skills[1] + ")\n" +
                                            "Stamina (" + skills[2] + ")\n" +
                                            "Sneak (" + skills[3] + ")\n\n" +
                                
                                            "Damage Multipliers:\n" +
                                            "Sharp (" + damageMultipliers[0] + ")\n" +
                                            "Blunt (" + damageMultipliers[1] + ")\n" +
                                            "Elemental (" + damageMultipliers[2] + ")\n" +
                                            "Ranged (" + damageMultipliers[3] + ")\n\n"
                                        , "CYAN"));
                                        input.close();
                                        System.exit(2);
                                    }
                    
                                    System.out.println("\n" + cName + " woke up in a dumpster...\n");
                                    slowTxt("Lives left: " + stats[3], 130);
                                    stats[4] += 1;
                                    stats[0] = stats[1];
                                    stats[5] = stats[7];
                                    stats[7] = 0;
                                    continue;
                                }
                            } else {
                                System.out.println("\n" + cName + " has negative doubloons!\n\n1. Sign a Insurance Contract (1000d Limit)\n2. Leave anyway\n");

                                switch (playerSelection()) {
                                    case "1": 
                                        contract = true;
                                        break;
                                    default:
                                        inSino = false;
                                }
                            }
                        } else {
                            inSino = false;
                        }
                    } else if (response.contains("help")) {
                        clearConsole(500);
                        System.out.println(
                            "\nMini Games:\n" +
                            "\nRoller - Rolls a ball and depending on what number it landed on... " + cName + " could win or lose " + chips +"." + 
                            "\nGreybob - "+ cName + " and Bober draw 2 cards and whoever is closer to 19 wins if anyone has more than 20 they lose automatically." +
                            "\nPonkler - "+cName+" draws 5 cards. Bober draws 5 cards. Whoever has more matching cards (to the first card) in their deck wins." +
                            "\nPonkler Example - " + cName + "'s cards: 7, 9, Z, Z, Z     Dealer's cards: X, 5, X, Y, 2 (In this example dealer wins even though "+cName+" had a 3 matching cards.)\n" +
                            "\nCard Values:\n" +
                            "\nP - Ponkler Card, has a value of 0 and can be swapped for any non-numerical card in Ponkler." +
                            "\nA - Ace, has a value of one and looks good doing it." +
                            "\n2-9 - Numerical cards, have the value of the number on the face." +
                            "\nX,Y,Z - Cord Cards, have a value of 10, 11, & 12.\n" +
                            "\nPayout - If " + cName + " wins in any game they will win " + chips + " or up to " + chips*2 + " chips in certain outcomes."
                        );

                        playerSelection();
                    }

                    clearConsole(1000);
                    turns++;
                } while (inSino);
            }

        }

        // __________________________________________________ Slums While Loop End __________________________________________________

        clearConsole(1000);

        if (ending.equals("Confidence") || ending.equals("Fetcher")) {
            slowTxt(cName + " is allowed out of the city under the guard's orders. Nobody messes with " + cName + ", and they escape with ease.\n", 150);
            slowTxt(
                "The city is too dangerous to stay in now. While you figure out what to do next,\n" +
                "you catch word of a nearby town full of apocalypticists and decide it's better to be safe than sorry.\n" +
                "You join in on their preachings in preparation for the disaster that is to come.\n\n", 150);
            slowTxt(cName + " lives happily.\n", 150);
        } else if (ending.equals("Sneaky Beaky Like") || ending.equals("Almost Close Enough") || ending.equals("Ok Boomer")) {
            if (skills[3] >= 90) {
                slowTxt(
                    "Guards patrol the fields surrounding the city, but " + cName + " successfully evades detection - zipping from cover to cover.\n" +
                    cName + " makes it to a surrounding town seeking refuge from the disaster bubbling in the slums. Without looking back.\n" +
                    cName + " gets a job, starts a new life, and lives happily ever after.\n"
                , 150);
            } else {
                slowTxt(
                    cName + " finds a hole in the fence, possibly big enough to crawl through.\n" +
                    "While attempting to squeeze in, " + cName + "'s big, clumsy ass gets stuck,\n" +
                    "knowing damn well they should've leveled up their sneak skill before attempting to escape.\n", 150);
                slowTxt(cName + "'s foot gets stuck and freaks out. The rustling of the fence attracts the attention of the nearby guards. Busted.\n" + cName + " was sent to a high security prison and was charged 9 life sentences...", 150);
            }
        } else if (ending.equals("")) {

            slowTxt("Breathing heavily, the player stands over their defeated opponent, the fight feeling like it lasted forever.\n" +
                "Their knuckles are raw, a fresh cut stings on their cheek, and their weapon looks battered from the struggle.\n" +
                "Without a glance back, they start toward the edge of the slums,\n" +
                "each step taking them closer to the freedom they fought so hard to earn."
            , 80);
        } else if (ending.equals("")) {
            slowTxt("Breathing heavily, the player drops to their knees, their weapon slipping from their grasp.\n" +
            "The fight felt like it lasted forever, but they lost. Blood drips from their wounds, their strength fading fast.\n" +
            "Their opponent stands over them, unscathed, as the player collapses onto the cold ground. Everything goes black.\n"
            , 80);
        }

        if (infected) {
            clearConsole(500);
            slowTxt("Unfortunately... The Crimson Plague was released from the slums and was spread to the rest of Keji City...", 70);
            clearConsole(600);
            slowTxt("Two weeks after, " + cName + "'s escape... The slums were comepletely infected...", 70);
            clearConsole(600);
            slowTxt("By the 4th week... It had spread enough to reach the coasts of the island, Nekomura...", 60);
            clearConsole(500);
            slowTxt("In just 2 months after being infected...", 130);
            clearConsole(800);
            slowTxt(cName + " dropped dead in their forrest hideout...", 100);
            clearConsole(500);
            slowTxt(
                "Slowly... More and more people succumbed to the illness.\n" +
                "Nearly 60% of the Nekohito population was wiped out due to the actions of one person..."
            , 100);
            clearConsole(1000);
            slowTxt(colour(cName, "red") + " will be written with red ink in history books for generations.", 150);
            clearConsole(1000);
        }

        System.out.println(colour("\n\nThats it for now. Thanks for playing :)\n\n", "CYAN"));

        /*
        * If we hadn't covered something yet and I needed it for my project I would look it up online,
        * but I stopped doing that for this so that I dont use something not covered in class on accident.
        * "Nordverden" was my first attempt at making a text-based open-world role playing game and it was the foundation for this project.
        * The biggest difference between these two projects was my group which helped establish the story which turned the game into what it is now.
        * Nothing was written by AI, except for the original combat method but it was changed completely by this point.
        * I also tried using it to debug the game but most of the time it didnt help that much.
        * Ik its just for a class but Im proud of how this project turned out. - Rigo
        */

        slowTxt(cName + " got the '" + ending + "' ending!\n\n\n", 100);

        slowTxt(colour(
            "Final Character Stats:\n\n" +

            "Name - " + cName + "\n" +
            "Health - " + stats[0] + "/" + stats[1] + "\n" +
            "Level - " + stats[2] + "\n" +
            "Lives - " + stats[3] + "\n" +
            "Luck - " + stats[4] + "\n" +
            "Doubloons - " + stats[5] + "\n\n" +

            "Weapon - " + cWeapon + "\n" +
            "Damage - "+ stats[6] +"\n" +
            "Damage Type - " + cDmgType + "\n\n" +

            "Armour - " + armour + "\n" +
            "Damage Resistance - " + cDmgRes + "\n\n" +

            "Skills:\n" +
            "Strength (" + skills[0] + ")\n" +
            "Speech (" + skills[1] + ")\n" +
            "Stamina (" + skills[2] + ")\n" +
            "Sneak (" + skills[3] + ")\n\n" +

            "Damage Multipliers:\n" +
            "Sharp (" + damageMultipliers[0] + ")\n" +
            "Blunt (" + damageMultipliers[1] + ")\n" +
            "Elemental (" + damageMultipliers[2] + ")\n" +
            "Ranged (" + damageMultipliers[3] + ")\n\n" + 

            "Turns Taken: " + turns
        , "CYAN"), 100);
        
        input.close();
        System.exit(1);
    }

    



// ____________________________________________________________________________________________________   Function Junction   ____________________________________________________________________________________________________



// Method for taking the user's input (also gives user more options like quiting)
public static String playerSelection(){
    String pSel = "";
    pSel = input.nextLine();

    if (pSel.equals("clear"))
        clearConsole(1000);
    if (pSel.equals("exit")) {
        System.out.println("\nGoodbye\n");
        input.close();
        clearConsole(1234);
        System.exit(0);
    }

    return pSel;
}

// Method that clears the screen
public static void clearConsole(int ms) {
    pause(ms);

    for (int i = 0; i < 50; i++) {
        System.out.println("\n\n");
    }
}

// Method for colouring the text
public static String colour(String ogTxt, String colour) {
    String newTxt = "";
    if (colour.equalsIgnoreCase("red")) {
        newTxt = "\u001B[31m" + ogTxt + "\u001B[0m";
    } else if (colour.equalsIgnoreCase("green")) {
        newTxt = "\u001B[32m" + ogTxt + "\u001B[0m";
    } else if (colour.equalsIgnoreCase("yellow")) {
        newTxt = "\u001B[33m" + ogTxt + "\u001B[0m";
    } else if (colour.equalsIgnoreCase("blue")) {
        newTxt = "\u001B[34m" + ogTxt + "\u001B[0m";
    } else if (colour.equalsIgnoreCase("purple")) {
        newTxt = "\u001B[35m" + ogTxt + "\u001B[0m";
    } else if (colour.equalsIgnoreCase("cyan")) {
        newTxt = "\u001B[36m" + ogTxt + "\u001B[0m";
    } else if (colour.contains("\u001B")){
        newTxt = colour + ogTxt + "\u001B[0m";
    } else {
        newTxt = ogTxt;
    }

    return newTxt;
}

// Method that pauses for a certain ammount (Based off Youssef's method "pause" only changed long to int because we dont need more than a 596 hr pause)
public static void pause(int ms) {
    try {
        Thread.sleep(ms);
    } catch (InterruptedException e) {}
}

// Method that slows down text chunks (Based off Youssef's method "slowText")
public static void isSpeaking(String name, String text) {
    System.out.print(name + ": ");
    for (int i = 0; i < text.length(); i++) {
        System.out.print(text.charAt(i));
        pause(68);
    }

}

// Methods that display ascii cats - everything made by rigo
public static void talkingCats(String[] face1, String[] face2) {
    for (int i = 0; i < 7; i++) {
        System.out.print(face1[i]);
        System.out.println(face2[i]);
        pause(5);
    }
}

public static void leftTalkingCats() {
    final String[] R_CLOSED = {
        "       /\\      /\\     ",
        "      /  \\____/  \\    ",
        "     /            \\   ",
        "    |   o     o   |   ",
        "    |      <      |   ",
        "    |     ___     |   ",
        "    \\____________/    "
    };
    final String[] L_OPEN = {
        "       /\\      /\\     ",
        "      /  \\____/  \\    ",
        "     /  _     _   \\   ",
        "    |   o     o   |   ",
        "    |      >      |   ",
        "    |      O      |   ",
        "    \\____________/    "
    };    
    for (int i = 0; i < 7; i++) {
        System.out.print(L_OPEN[i]);
        System.out.println(R_CLOSED[i]);
        pause(5);
    }
}

public static void rightTalkingCats() {
    final String[] L_CLOSED = {
        "       /\\      /\\     ",
        "      /  \\____/  \\    ",
        "     /  _     _   \\   ",
        "    |   o     o   |   ",
        "    |      >      |   ",
        "    |     ___     |   ",
        "    \\____________/    "
    };
    final String[] R_OPEN = {
        "       /\\      /\\     ",
        "      /  \\____/  \\    ",
        "     /            \\   ",
        "    |   o     o   |   ",
        "    |      <      |   ",
        "    |      O      |   ",
        "    \\____________/    "
    };
    for (int i = 0; i < 7; i++) {
        System.out.print(L_CLOSED[i]);
        System.out.println(R_OPEN[i]);
        pause(5);
    }
}

// Method that slows down text
public static void slowTxt(String text, int speed) {
    for (int i = 0; i < text.length(); i++) {
        System.out.print(text.charAt(i));
        pause(speed);
    }
}

// Method that return a list containing character's skills [0 = Strength, 1 = Speech, 2 = Stamina, 4 = Sneak]
public static int[] setSkills(int[] skills) {
    int skillPts = 50;
    clearConsole(200);

    while (skillPts > 0) {
        clearConsole(200);
        System.out.println("\n\nYou have " + skillPts + " points to spend.");
        System.out.println("What skill would you like to assign 10 points to:\n");
        System.out.println("\n1. Strength ("+skills[0]+")\n2. Speech ("+skills[1]+")\n3. Stamina ("+skills[2]+")\n4. Sneak ("+skills[3]+")\n");

        switch (playerSelection()) {
            case "1":
                skills[0] += 10;
                skillPts -= 10;
                System.out.println("\n10 points have been assigned to Strength.");
                break;
            case "2":
                skills[1] += 10;
                skillPts -= 10;
                System.out.println("\n10 points have been assigned to Speech.");
                break;
            case "3":
                skills[2] += 10;
                skillPts -= 10;
                System.out.println("\n10 points have been assigned to Stamina.");
                break;
            case "4":
                skills[3] += 10;
                skillPts -= 10;
                System.out.println("\n10 points have been assigned to Sneak.");
                break;
            default:
                System.out.println("That's not an option.");
                continue;
        }

        pause(200);
    }

    clearConsole(200);
    System.out.println("\nThese are your character's skills:");
    System.out.println(
          "Strength (" + skills[0] + ")\n"
        + "Speech (" + skills[1] + ")\n"
        + "Stamina (" + skills[2] + ")\n"
        + "Sneak (" + skills[3] + ")\n"
    );

    System.out.println("Are you happy with these or would you like to change them?");
    System.out.println("\n1. Continue\n2. Reset Skills\n");

    switch (playerSelection()) {
        case "2":
            skills[0] = 0;
            skills[1] = 0;
            skills[2] = 0;
            skills[3] = 0;
            setSkills(skills);
            break;
        default:
            System.out.println("Skills Confirmed!");
            System.out.println("\n____________________________________________________________________________________________________\n");
    }

    return skills;
}

// Method that return a list with Damage Multipliers [0 = Sharp, 1 = Blunt, 2 = Elemental, 4 = Ranged]
public static double[] setDamageMultipliers(double[] damageMultipliers) {
    double dmgPts = 2.0;
    clearConsole(200);

    while (dmgPts > 0) {
        clearConsole(300);
        System.out.println("\n\nYou have " + dmgPts + " points to spend.");
        System.out.println("What damage multiplier would you like to assign 0.5 points to:");
        System.out.println("\n1. Sharp ("+damageMultipliers[0]+")\n2. Blunt ("+damageMultipliers[1]+")\n3. Elemental ("+damageMultipliers[2]+")\n4. Ranged ("+damageMultipliers[3]+")\n");

        switch (playerSelection()) {
            case "1":
                damageMultipliers[0] += 0.5;
                dmgPts -= 0.5;
                System.out.println("\n0.5 points have been assigned to Sharp Damage!");
                break;
            case "2":
                damageMultipliers[1] += 0.5;
                dmgPts -= 0.5;
                System.out.println("\n0.5 points have been assigned to Blunt Damage!");
                break;
            case "3":
                damageMultipliers[2] += 0.5;
                dmgPts -= 0.5;
                System.out.println("\n0.5 points have been assigned to Elemental Damage!");
                break;
            case "4":
                damageMultipliers[3] += 0.5;
                dmgPts -= 0.5;
                System.out.println("\n0.5 points have been assigned to Ranged Damage!");
                break;
            default:
                System.out.println("\n\nThat's not an option.\n\n");
                continue;
        }
    }

    clearConsole(200);
    System.out.println("\nThese are your Damage Multipliers:");
    System.out.println(
          "Sharp (" + damageMultipliers[0] + ")\n"
        + "Blunt (" + damageMultipliers[1] + ")\n"
        + "Elemental (" + damageMultipliers[2] + ")\n"
        + "Ranged (" + damageMultipliers[3] + ")\n"
    );

    System.out.println("Are you happy with these or would you like to change them?");
    System.out.println("\n1. Continue\n2. Reset Damage Multipliers\n");

    switch (playerSelection()) {
        case "2":
            damageMultipliers[0] = 0;
            damageMultipliers[1] = 0;
            damageMultipliers[2] = 0;
            damageMultipliers[3] = 0;
            setDamageMultipliers(damageMultipliers);
            break;
        default:
            System.out.println("Damage Multipliers Confirmed!");
    }

    return damageMultipliers;
}

// Dice rolling method
public static int dice(String cName, int kMoneyIn, String eName, int eMoney) {
    int kBet = 0;
    int eBet = 0;
    int kMoney = kMoneyIn;
    int profLoss = 0;
    boolean betSet = false;
    String[] diceModels = {
          "    _________ \n"
        + "   |         | \n"
        + "   |    o    | \n"
        + "   |         | \n"
        + "    _________ \n",
          "    _________ \n"
        + "   |         | \n"
        + "   |  o   o  | \n"
        + "   |         | \n"
        + "    _________ \n",
          "    _________ \n"
        + "   | o       | \n"
        + "   |    o    | \n"
        + "   |       o | \n"
        + "    _________ \n",
          "    _________ \n"
        + "   | o     o | \n"
        + "   |         | \n"
        + "   | o     o | \n"
        + "    _________ \n",
          "    _________ \n"
        + "   | o     o | \n"
        + "   |    o    | \n"
        + "   | o     o | \n"
        + "    _________ \n",
          "    _________ \n"
        + "   | o     o | \n"
        + "   | o     o | \n"
        + "   | o     o | \n"
        + "    _________ \n",
    };

    while (kMoney > 0) {
        clearConsole(1000);

        if (eMoney <= 0){
            isSpeaking(colour(eName, "Blue"), "Damn. Im all out.\n");
            break;
        }
        eBet = rand.nextInt(eMoney);
        slowTxt("Op's Money: "+ eMoney + "\nOp Bet: " + eBet + "\n", 68);
        slowTxt(cName + "'s' Money: "+ kMoney +"\nBet: ", 68);

        do {
            if (input.hasNextInt()) {
                kBet = input.nextInt();
                if (kBet > kMoney) {
                    isSpeaking(colour(eName, "RED"), "You dont have that much scrap bud.\n\n");
                    input.nextLine();
                    continue;
                }

                if (kBet < eBet) {
                    isSpeaking(colour(eName, "Blue"), "Ahh... your bet is lower than mine, now you have to pay me a 15 doubloon fee.\n\n");
                    kMoney -= 15;
                    eMoney += 15;
                }

                betSet = true;
            } else {
                isSpeaking(colour(eName, "REd"), "Thats not a valid bet...\n\n");
                input.nextLine();
            }
        } while (!betSet);

        if (kBet == 0) {
            isSpeaking(colour(cName, "Green"), "Good game " + eName + ", but I gotta go.\n");
            break;
        }

        slowTxt("3...", 100);
        pause(500);
        slowTxt("2...", 100);
        pause(500);
        slowTxt("1...", 100);
        pause(500);

        int kDice1 = rand.nextInt(6) + 1;
        int kDice2 = rand.nextInt(6) + 1;
        int kDice3 = rand.nextInt(6) + 1;

        int eDice1 = rand.nextInt(6) + 1;
        int eDice2 = rand.nextInt(6) + 1;
        int eDice3 = rand.nextInt(6) + 1;

        slowTxt(
            "\n" + cName + "'s dice: \n\n"
            + diceModels[kDice1 - 1]
            + diceModels[kDice2 - 1]
            + diceModels[kDice3 - 1]

            + "\n\n" + eName + "'s dice: \n\n"
            + diceModels[eDice1 - 1]
            + diceModels[eDice2 - 1]
            + diceModels[eDice3 - 1]
        ,10);

        if (kDice1 == kDice2 && kDice2 == kDice3) {
            if (eDice1 == eDice2 && eDice2 == eDice3) {
                isSpeaking(colour(eName, "Blue"), "HA! What are the chances of that.");
                continue;
            }

            isSpeaking(colour(eName, "Blue"), "Damn.\n\n");
            slowTxt(cName + " won " + kBet*2 + " doubloons!", 100);
            kMoney += kBet*2;
            eMoney -= eBet;
        } else if (kDice1 == kDice2 || kDice2 == kDice3 || kDice3 == kDice1){
            if (eDice1 == eDice2 || eDice2 == eDice3 || eDice3 == eDice1){
                isSpeaking(colour(eName, "Blue"), "Could've been worse.");
                continue;
            }

            isSpeaking(colour(eName, "Blue"), "Damn.\n\n");
            slowTxt(cName + " won " + kBet + " doubloons!", 100);
            kMoney += kBet;
            eMoney -= eBet;
        } else if (eDice1 == eDice2 && eDice2 == eDice3) {

            isSpeaking(colour(eName, "Blue"), "GET SHIT ON!!\n");
            eMoney += eBet*2;
            kMoney -= kBet;
        } else if (eDice1 == eDice2 || eDice2 == eDice3 || eDice3 == eDice1){

            isSpeaking(colour(eName, "Blue"), "Yup!\n");
            eMoney += eBet;
            kMoney -= kBet;
        } else {
            isSpeaking(colour(eName, "Blue"), "Lets run it again no one got anything.\n");
        }
    };
    profLoss = kMoney - kMoneyIn;

    if (profLoss <= 0)
        System.out.println("\n" + cName + " lost " + kMoneyIn + " doubloons!");
    else { System.out.println("\n" + cName + " made " + profLoss + " doubloons!");}

    return kMoney;
}

// Shop method
public static String[] shopping(String cName, int[] stats, String mName, String[] items, int[] cost) {
    slowTxt("\n" + cName + " is trying to barter with " + mName + "...\n", 100);
    clearConsole(500);
    String[] itemsBought = new String[10];
    int howMany = 0;
    boolean inShop = true;

    if (stats[5] < 0) {
        slowTxt("\n" + cName + " already has a negative balance!\n", 100);
        inShop = false;
    }

    while (inShop) {
        System.out.println("\n" + cName + "'s money: " + stats[5]);
        System.out.print("Items Bought: ");
        if (itemsBought[0] == null) {
            System.out.print("");
        } else {
            for (int i = 0; i < 10; i++) {
                if (itemsBought[i] == null) {
                    continue;
                } else {
                    if (i > 0)
                        slowTxt(", ", 50);
                    slowTxt(itemsBought[i], 50);
                }
            }
        }

        pause(500);
        isSpeaking(colour("\n\n" + mName, "YELLOW"), "This is what I sell...\n\n");

        // Displays the list of items
        for (int i = 0; i < 5; i++) {
            System.out.println((i + 1) + ". " + items[i] + " (" + cost[i] + ")");
        }
        System.out.println("\n'e' Leave Shop\n");

        // Gives character their purchased item and "pays" the shop owner
        switch (playerSelection()) {
            case "e": 
                System.out.println(colour(mName + ": Bye.", "YELLOW"));
                inShop = false;
                continue;
            case "1":
                System.out.println(colour(cName + " bought a " + items[0] + ", for " + cost[0] + " doubloons.", "YELLOW"));
                stats[5] -= cost[0];
                itemsBought[howMany] = items[0];
                howMany++;
                break;
            case "2":
                System.out.println(colour(cName + " bought a " + items[1] + ", for " + cost[1] + " doubloons.", "YELLOW"));
                stats[5] -= cost[1];
                itemsBought[howMany] = items[1];
                howMany++;
                break;
            case "3":
                System.out.println(colour(cName + " bought a " + items[2] + ", for " + cost[2] + " doubloons.", "YELLOW"));
                stats[5] -= cost[2];
                itemsBought[howMany] = items[2];
                howMany++;
                break;
            case "4":
                System.out.println(colour(cName + " bought a " + items[3] + ", for " + cost[3] + " doubloons.", "YELLOW"));
                stats[5] -= cost[3];
                itemsBought[howMany] = items[3];
                howMany++;
                break;
            case "5":
                System.out.println(colour(cName + " bought a " + items[4] + ", for " + cost[4] + " doubloons.", "YELLOW"));
                stats[5] -= cost[4];
                itemsBought[howMany] = items[4];
                howMany++;
                break;
            default: System.out.println(colour(mName + ": I dont sell that.", "YELLOW"));
        }

        clearConsole(1000);
        if (howMany >= 10) {
            isSpeaking(colour(mName, "yellow"), "That seems like enough... dont you?\n");
            clearConsole(300);
            inShop = false;
        }
    }

    return itemsBought;
}

// __________________________________________________  Turn Based Combat Systems  __________________________________________________

// Method that starts and ends combat also sets lives if the player died
public static boolean combat(String cName, int[] stats, double cDmgRes, String cDmgType, int[] skills, double[] damageMultipliers, String eName, int eHealth, int eDamage) {
    clearConsole(5000);
    // Color Variables
    final String RESET = "\u001B[0m"; // Resets color (needed after every change)
    final String RED = "\u001B[31m"; // Reserved for Enemies
    final String GREEN = "\u001B[32m"; // Reserved for character

    // Combat Variables
    boolean inCombat = true;
    double dmgMult = 0.0;
    int damage = 0;
    int cHitChance = 0;
    int escapeChance = 0;
    boolean wonCom = false;

    int enemyDamage = 0;
    int eHitChance = 0;

    int kRange = 0;
    int turns = 0;

    // Sets ammount of turn based on character's Stamina
    if (skills[2] == 100) {
        turns = 5;
    } else if (skills[2] >= 70) {
        turns = 3;
    } else if (skills[2] >= 40) {
        turns = 2;
    } else {
        turns = 1;
    }

    // Sets damage multiplier based on damage type
    if (cDmgType.equals("Sharp")) {
        dmgMult = damageMultipliers[0];
    } else if (cDmgType.equals("Blunt")) {
        dmgMult = damageMultipliers[1];
    } else if (cDmgType.equals("Elemental")) {
        dmgMult = damageMultipliers[2];
    } else if (cDmgType.equals("Ranged")) {
        dmgMult = damageMultipliers[3];
    }

    // Damage equation (takes damage, multiplies it by the damage multiplier, then adds bonus for strength)
    damage = (int)((stats[6]*dmgMult) + (skills[0]/10));

    // Keeps going until character kills the enemy or runs away (both count as a win tho)
    while (inCombat) {
        // Displays character and the enemy's health
        System.out.println(cName + "'s health: " + stats[0] + "/" + stats[1]);
        System.out.println(eName + "'s health: " + eHealth);


    // character's Turn

        // Give the player the choice to attack or run away
        System.out.println("\n1. Fight\n2. Flee\n");

        switch (playerSelection()) {
            case "1": // If player decides to fight...
                for (int i = 0; i < turns; i++) { // number of attacks determined by stamina
                    cHitChance = rand.nextInt(20) + 1 + stats[4]; // "20 sided die" determines if character's attack hit
 
                    if (cHitChance >= 20) { // character does double damage if a 20 or higher is rolled
                        System.out.println(GREEN + "*CRITICAL HIT*");
                        eHealth -= damage*2;
                        System.out.println(cName + RESET + " hit " + eName + " and did " + damage*2 + " damage!\n");
                    } else if (cHitChance >= 10) { // removes health from enemy (ammount is based on damage)
                        eHealth -= damage;
                        System.out.println(GREEN + cName + RESET + " hit " + eName + " and did " + damage + " damage!\n");
                    } else { // If the dice rolls less than 10 the attack misses
                        System.out.println(GREEN + cName + " missed!\n" + RESET);
                    }

                    // breaks loop if enemy dies before turn ends
                    if (eHealth <= 0)
                        break;
                }

                // Ends combat if enemy's health drops to 0
                if (eHealth <= 0) {
                    System.out.println(GREEN + cName + RESET + " defeated " + RED + eName + RESET + "!\n");
                    wonCom = true;
                    inCombat = false;
                    continue;
                }
                break;
            case "2": // If the player tries to run
                escapeChance = rand.nextInt(100) + 1;
                if (escapeChance < (skills[3] + stats[4]*10)) { // Ends combat if character's sneak skill is higher than the escape chance (0-100 roll)
                    System.out.println(cName + " got away safely!\n");
                    inCombat = false;
                    continue;
                } else { // Continues fight if escape chance was too high or if sneak is too low
                    System.out.println(cName + " was not able to get away...\n");
                }
                break;
            default: continue;
        }

    // Enemy's Turn

        // Ranged weapons get a -2 chance to hit character
        kRange = (cDmgType.equals("Ranged"))? 2 : 0;

        // "20 sided die" determines if the enemy's attack hits
        eHitChance = rand.nextInt(20) + 1; 
        eHitChance = (kRange == 2)? eHitChance - 2: eHitChance;

        // Enemy only gets one attack per turn but combat doesn't end unless enemy dies or character runs
        if (eHealth > 0 && eHitChance >= 10) { // If enemy is alive and their attack hit...
            enemyDamage = (eHitChance == 20)? eDamage*2 : (int)(eDamage / cDmgRes);

            if (eHitChance >= 18) { // Ctritical hit chance is lower for enemy so that ranged weapons are not too powerful (they still might be)
                System.out.println(RED + eName + " got a critical hit!");
                stats[0] -= enemyDamage*2;
                System.out.println(eName + RESET + " attacked " + cName + " and did " + enemyDamage*2 + " damage!\n");
            } else {
                stats[0] -= enemyDamage;
                System.out.println(RED + eName + RESET + " attacked " + cName + " and did " + enemyDamage + " damage!\n");
            }

            // Removes a life if the enemy kills character
            if (stats[0] <= 0) {
                System.out.println("\n" + RED + cName + " died!\n" + RESET);
                
                stats[3]--;

                // If the player runs out of lives it ends the game (might be too harsh but idk. Maybe we add a way to gain lives)
                if (stats[3] < 0) {
                    System.out.println(cName + " ran out of lives...");
                    System.out.println(cName + "'s journey ended unexpectedly.");
                    clearConsole(2000);
                    slowTxt(cName + " got the Sovengarde ending!\n\n\n", 100);

                    System.out.println(colour(
                        "Final Character Stats:\n\n" +

                        "Name - " + cName + "\n" +
                        "Health - " + stats[0] + "/" + stats[1] + "\n" +
                        "Level - " + stats[2] + "\n" +
                        "Lives - " + stats[3] + "\n" +
                        "Luck - " + stats[4] + "\n" +
                        "Doubloons - " + stats[5] + "\n\n" +

                        "Weapon - " + "{Not Available in Combat}" + "\n" +
                        "Damage - "+ stats[6] +"\n" +
                        "Damage Type - " + cDmgType + "\n\n" +

                        "Armour - " + "{Not Available in Combat}" + "\n" +
                        "Damage Resistance - " + cDmgRes + "\n\n" +

                        "Skills:\n" +
                        "Strength (" + skills[0] + ")\n" +
                        "Speech (" + skills[1] + ")\n" +
                        "Stamina (" + skills[2] + ")\n" +
                        "Sneak (" + skills[3] + ")\n\n" +

                        "Damage Multipliers:\n" +
                        "Sharp (" + damageMultipliers[0] + ")\n" +
                        "Blunt (" + damageMultipliers[1] + ")\n" +
                        "Elemental (" + damageMultipliers[2] + ")\n" +
                        "Ranged (" + damageMultipliers[3] + ")\n\n"
                    , "CYAN"));
                    input.close();
                    System.exit(3);
                }

                System.out.println(GREEN + "BUT THAT DIDNT STOP " + cName.toUpperCase() + "!\n" + RESET);
                slowTxt("Lives left: " + stats[3], 130);
                damage += 10;
                stats[4] += 1;
                stats[0] = stats[1];
            }
        } else {
            System.out.println(RED + eName + " missed!\n" + RESET);
        }
    }
    
    if (wonCom) {
        stats[2] = levelUp(cName, stats[2]);
        stats[1] += 10;
        stats[0] = stats[1];
        skills = increaseSkills(cName, skills);
        damageMultipliers = increaseDamage(cName, damageMultipliers);
    }

    return wonCom;
}
// About 30% of the combat method was written by AI and fixed by Rigo. Just the parameters and part of the enemy turn, the rest was taken from Nordverden's more complex combat system

// Method that starts and ends combat also sets lives if the player died
public static void combatTwo(String cName, int[] stats, double cDmgRes, int[] skills, double[] damageMultipliers, String cDmgType, String[] eName, int[] eHealth, int[] eDamage, String aName, int aHealth, int aDamage) {
    clearConsole(1000);
    // Color Variables
    final String RESET = "\u001B[0m"; // Resets color (needed after every change)
    final String ENEMY = "\u001B[31m"; // Reserved for Enemies
    final String ALLY = "\u001B[32m"; // Reserved for character

    // Combat Variables
    boolean inCombat = true;
    boolean fighting = false;
    double dmgMult = 0.0;
    int damage = 0;
    int cHitChance = 0;
    int escapeChance = 0;

    int enemyDamage = 0;
    int eHitChance = 0;

    boolean ranged = (cDmgType.equals("Ranged"))? true : false;
    int turns = 0;

    // Sets ammount of turn based on character's Stamina
    if (skills[2] == 100) {
        turns = 5;
    } else if (skills[2] >= 70) {
        turns = 3;
    } else if (skills[2] >= 40) {
        turns = 2;
    } else {
        turns = 1;
    }

    // Sets damage multiplier based on damage type
    if (cDmgType.equals("Sharp")) {
        dmgMult = damageMultipliers[0];
    } else if (cDmgType.equals("Blunt")) {
        dmgMult = damageMultipliers[1];
    } else if (cDmgType.equals("Elemental")) {
        dmgMult = damageMultipliers[2];
    } else if (cDmgType.equals("Ranged")) {
        dmgMult = damageMultipliers[3];
    }

    // Damage equation (takes damage, multiplies it by the damage multiplier, then adds bonus for strength)
    damage = (int)((stats[6]*dmgMult) + (skills[0]/10));

    // Keeps going until character kills the enemy or runs away (both count as a win tho)
    while (inCombat) {
        clearConsole(1000);
        fighting = false;
        // Displays character, ally and the enemy's health
        if (aName != null && !aName.equals(""))
            slowTxt(colour(aName, ALLY) + "'s health: " + aHealth + "\n", 10);
        slowTxt(
        colour(cName, ALLY) + "'s health: " + stats[0] + "/" + stats[1] + "\n\n" +
        colour(eName[0], ENEMY) + "'s health: " + eHealth[0] + "\n" +
        colour(eName[1], ENEMY) + "'s health: " + eHealth[1] + "\n" +
        colour(eName[2], ENEMY) + "'s health: " + eHealth[2] + "\n"
        , 10);

        // __________________________________________________ Player's Turn __________________________________________________

        // Give the player the choice to attack or run away
        System.out.println("\n1. Attack "+eName[0]+"\n2. Attack "+eName[1]+"\n3. Attack "+eName[2]+"\n4. Run Away\n");
        int cTarget = 0;

        switch (playerSelection()) {
            case "3": cTarget++;
            case "2": cTarget++;
            case "1": fighting = true; break;
            case "4": // If the player tries to run
                escapeChance = rand.nextInt(100) + 1;
                if (escapeChance < (skills[3] + stats[4]*10)) { // Ends combat if character's sneak skill is higher than the escape chance (0-100 roll)
                    clearConsole(1);
                    slowTxt(cName + " got away safely!\n\n", 100);
                    inCombat = false;
                    continue;
                } else { // Continues fight if escape chance was too high or if sneak is too low
                    slowTxt(cName + " was not able to get away...\n", 100);
                }
                break;
            default: continue;
            }

            // __________________________________________________ if they attacked an enemy __________________________________________________
            if (fighting) {
                for (int i = 0; i < turns; i++) { // number of attacks determined by stamina
                    cHitChance = rand.nextInt(20) + 1 + stats[4]; // "20 sided die" determines if character's attack hit

                    if (cHitChance >= 20) { // character does double damage if a 20 or higher is rolled
                        slowTxt(ALLY + "\n*CRITICAL HIT*\n", 10);
                        eHealth[cTarget] -= damage*2;
                        slowTxt(cName + RESET + " hit " + eName[cTarget] + " and did " + damage*2 + " damage!\n", 100);
                    } else if (cHitChance >= 10) { // removes health from enemy (ammount is based on damage)
                        eHealth[cTarget] -= damage;
                        slowTxt("\n" + ALLY + cName + RESET + " hit " + eName[cTarget] + " and did " + damage + " damage!\n", 100);
                    } else { // If the dice rolls less than 10 the attack misses
                        slowTxt("\n" + ALLY + cName + " missed!\n" + RESET, 100);
                    }

                    // breaks loop if enemy dies before turn ends
                    if (eHealth[cTarget] <= 0)
                        break;
                }            
            }

            if (eHealth[0] <= 0 && eHealth[1] <= 0 && eHealth[2] <= 0) {
                slowTxt(ALLY + cName + RESET + " defeated everyone!\n", 100);
                pause(300);
                inCombat = false;
                continue;
            }
        pause(100);

        // __________________________________________________ Ally turn __________________________________________________
        if (aName != null && !aName.equals("") ) {
            int aHitChance;
            int aTarget;
            boolean targetSet = false;

            aHitChance = rand.nextInt(20) + 1;
            
            do {
                aTarget = rand.nextInt(3);
                if (eHealth[aTarget] > 0)
                    targetSet = true;
            } while (!targetSet);

            if (aHitChance >= 20) { // character does double damage if a 20 or higher is rolled
                slowTxt(ALLY + "*CRITICAL HIT*\n", 10);
                eHealth[aTarget] -= aDamage*2;
                slowTxt(aName + RESET + " hit " + eName[aTarget] + " and did " + aDamage*2 + " damage!\n", 50);
            } else if (aHitChance >= 10) { // removes health from enemy (ammount is based on damage)
                eHealth[aTarget] -= aDamage;
                slowTxt(ALLY + aName + RESET + " hit " + eName[aTarget] + " and did " + aDamage + " damage!\n", 50);
            } else { // If the dice rolls less than 8 the attack misses
                slowTxt(ALLY + aName + " missed!\n" + RESET, 50);
            }
        }

        pause(300);

        // Ends combat if enemy's health drops to 0
        if (eHealth[0] <= 0 && eHealth[1] <= 0 && eHealth[2] <= 0) {
            slowTxt(ALLY + aName + RESET + " defeated everyone!\n", 100);
            pause(300);
            inCombat = false;
            continue;
        }

        // __________________________________________________ Enemy's Turn __________________________________________________

        for (int i = 0; i < 3; i++) {
            if (eHealth[i] <= 0)
                continue;
            // "20 sided die" determines if the enemy's attack hits
            eHitChance = rand.nextInt(20) + 1; 
            eHitChance = (ranged)? eHitChance - 2: eHitChance;
            boolean eTarget = true;
            if (aName != null && !aName.equals(""))
                eTarget = (rand.nextInt(10) > 5); // 50/50 chance to target player or ally (True = player, False = ally)
            if (eTarget) {
                slowTxt("\n" + eName[i] + " is attacking " + cName + "\n", 20);
                // Enemy only gets one attack per turn but combat doesn't end unless enemy dies or character runs
                if (eHealth[i] > 0 && eHitChance >= 10) { // If enemy is alive and their attack hit...
                    enemyDamage = (eHitChance == 20)? (int)((eDamage[i]*2)/cDmgRes) : (int)(eDamage[i] / cDmgRes);

                    if (eHitChance >= 18) { // Ctritical hit chance is lower for enemy so that ranged weapons are too powerful (they still might be)
                        System.out.println(ENEMY + eName[i] + " got a critical hit!");
                        stats[0] -= enemyDamage*2;
                        slowTxt(eName[i] + RESET + " attacked " + cName + " and did " + enemyDamage*2 + " damage!\n\n", 20);
                    } else {
                        stats[0] -= enemyDamage;
                        slowTxt(ENEMY + eName[i] + RESET + " attacked " + cName + " and did " + enemyDamage + " damage!\n", 20);
                    }

                    // Removes a life if the enemy kills character
                    if (stats[0] <= 0) {
                        slowTxt("\n" + ENEMY + cName + " died!\n" + RESET, 100);

                        stats[3]--;

                        // If the player runs out of lives it ends the game (might be too harsh but idk. Maybe we add a way to gain lives)
                        if (stats[3] < 0) {
                            slowTxt(cName + " ran out of lives...\n", 130);
                            slowTxt(cName + "'s journey ended unexpectedly.", 100);
                            clearConsole(2000);
                            slowTxt(cName + " got the Noble 6 ending!\n\n\n", 100);

                            System.out.println(colour(
                                "Final Character Stats:\n\n" +
                    
                                "Name - " + cName + "\n" +
                                "Health - " + stats[0] + "/" + stats[1] + "\n" +
                                "Level - " + stats[2] + "\n" +
                                "Lives - " + stats[3] + "\n" +
                                "Luck - " + stats[4] + "\n" +
                                "Doubloons - " + stats[5] + "\n\n" +
                    
                                "Weapon - " + "{Not Available in Combat}" + "\n" +
                                "Damage - "+ stats[6] +"\n" +
                                "Damage Type - " + cDmgType + "\n\n" +
                    
                                "Armour - " + "{Not Available in Combat}" + "\n" +
                                "Damage Resistance - " + cDmgRes + "\n\n" +
                    
                                "Skills:\n" +
                                "Strength (" + skills[0] + ")\n" +
                                "Speech (" + skills[1] + ")\n" +
                                "Stamina (" + skills[2] + ")\n" +
                                "Sneak (" + skills[3] + ")\n\n" +
                    
                                "Damage Multipliers:\n" +
                                "Sharp (" + damageMultipliers[0] + ")\n" +
                                "Blunt (" + damageMultipliers[1] + ")\n" +
                                "Elemental (" + damageMultipliers[2] + ")\n" +
                                "Ranged (" + damageMultipliers[3] + ")\n\n"
                            , "CYAN"));
                            input.close();
                            System.exit(4);
                        }

                        slowTxt(ALLY + "BUT THAT DIDNT STOP " + cName.toUpperCase() + "!\n\n" + RESET, 100);
                        slowTxt("Lives left: " + stats[3] + "\n", 100);
                        damage += 10;
                        stats[4]++;
                        stats[0] = stats[1];
                    }
                } else {
                    slowTxt(ENEMY + eName[i] + " missed!\n" + RESET, 20);
                }
            } else {
                if (eHealth[i] > 0 && eHitChance >= 10 && aHealth > 0) { // If enemy is alive and their attack hit...
                    enemyDamage = (eHitChance == 20)? (int)((eDamage[i]*2)) : (int)(eDamage[i]);

                    if (eHitChance >= 20) {
                        System.out.println(ENEMY + eName[i] + " got a critical hit!");
                        aHealth -= enemyDamage*2;
                        slowTxt(eName[i] + RESET + " attacked " + aName + " and did " + enemyDamage*2 + " damage!\n\n", 20);
                    } else {
                        aHealth -= enemyDamage;
                        slowTxt(ENEMY + eName[i] + RESET + " attacked " + aName + " and did " + enemyDamage + " damage!\n", 20);
                    }

                    if (aHealth <= 0) {
                        System.out.println("\n" + ENEMY + aName + " died!\n" + RESET);
                        aName = "";
                    }
                } else {
                    slowTxt(ENEMY + eName[i] + " missed!\n" + RESET, 20);
                }
            }
            pause(200);
        }
    }

    stats[2] = levelUp(cName, stats[2]);
    stats[1] += 10;
    stats[0] = stats[1];
    skills = increaseSkills(cName, skills);
    damageMultipliers = increaseDamage(cName, damageMultipliers);
}
// I had to get help for the ally turn from Lance (CS Tutor), because I couldn't debug it with ChatGPT. It was just an infinite loop when checking if an ally was present.

// Method that increases character's level
public static int levelUp(String cName, int level) {
    level++;
    System.out.println(cName + " leveled up!\n");
    System.out.println(cName + " is now level " + level);
    return level;
}

// Method that lets player increase character's skills (skill cap is 100)
public static int[] increaseSkills(String cName, int[] skills) {
    System.out.println("What skill would you like to assign 5 points to:");
    System.out.println(
        "\n1. Strength (" + skills[0] + ")" +
        "\n2. Speech (" + skills[1] + ")" + 
        "\n3. Stamina (" + skills[2] + ")" +
        "\n4. Sneak (" + skills[3] + ")\n"
    );

    switch (playerSelection()) {
        case "1":
            if (skills[0] >= 100) {
                skills[0] = 100;
                System.out.println("Sorry! " + cName + " reached the max Strength level.");
            } else {
                skills[0] += 5;
                System.out.println("5 points have been assigned to Strength.");
            }
            break;
        case "2":
            if (skills[1] >= 100) {
                skills[1] = 100;
                System.out.println("Sorry! " + cName + " reached the max Speech level.");
            } else {
                skills[1] += 5;
                System.out.println("5 points have been assigned to Speech.");
            }
            break;
        case "3":
            if (skills[2] >= 100) {
                skills[2] = 100;
                System.out.println("Sorry! " + cName + " reached the max Stamina level.");
            } else {
                skills[2] += 5;
                System.out.println("5 points have been assigned to Stamina.");
            }
            break;
        case "4":
            if (skills[3] >= 100) {
                skills[3] = 100;
                System.out.println("Sorry! " + cName + " reached the max Sneak level.");
            } else {
                skills[3] += 5;
                System.out.println("5 points have been assigned to Sneak.");
            }
            break;
        default:
            System.out.println("That's not an option.");
    }

    return skills;
}

// Method that lets player increase character's damage multipliers (damage multipliers are capped at 3.0)
public static double[] increaseDamage(String cName, double[] damageMultipliers) {
    System.out.println("What damage multiplier would you like to assign points to:");
    System.out.println(
        "\n1. Sharp (" + damageMultipliers[0] + ")" +
        "\n2. Blunt (" + damageMultipliers[1] + ")" +
        "\n3. Elemental (" + damageMultipliers[2] + ")" +
        "\n4. Ranged (" + damageMultipliers[3] + ")\n"
    );

    switch (playerSelection()) {
        case "1":
            if (damageMultipliers[0] >= 3.0) { // 20 Levels from 0.0, 7 from 2.0 start
                damageMultipliers[0] = 3.0;
                System.out.println("Sorry! " + cName + " has reached the max multiplier for Sharp damage.");
            } else {
                damageMultipliers[0] += 0.15;
                System.out.println("0.15 points have been assigned to Sharp damage.");
            }
            break;
        case "2":
            if (damageMultipliers[1] >= 4.0) { // 40 Levels from 0.0, 20 from 2.0 start
                damageMultipliers[1] = 4.0;
                System.out.println("Sorry! " + cName + " has reached the max multiplier for Blunt damage.");
            } else {
                damageMultipliers[1] += 0.10;
                System.out.println("0.10 points have been assigned to Blunt damage.");
            }
            break;
        case "3":
            if (damageMultipliers[2] >= 5.0) { // 20 Levels from 0.0, 12 from 2.0 start
                damageMultipliers[2] = 5.0;
                System.out.println("Sorry! " + cName + " has reached the max multiplier for Elemental damage.");
            } else {
                damageMultipliers[2] += 0.25;
                slowTxt("0.25 points have been assigned to Ranged damage.\n", 60);            }
            break;
        case "4":
            if (damageMultipliers[3] >= 2.0) { // 40 Levels from 0.0, 0 from 2.0 start
                damageMultipliers[3] = 2.0;
                System.out.println("Sorry! " + cName + " has reached the max multiplier for Ranged damage.");
            } else {
                damageMultipliers[3] += 0.05;
                slowTxt("0.05 points have been assigned to Ranged damage.\n", 60);
            }
            break;
        default:
            System.out.println("That's not an option.");
            increaseDamage(cName, damageMultipliers);
    }

    clearConsole(2000);
    return damageMultipliers;
}

// Method that prints out quests
public static void printQuests(String[] quest, boolean[] questComplete) {
    slowTxt("Quests:\n\n", 100);
    for (int i = 0; i < 10; i++) {
        if (quest[i] == null) {
            continue;
        }

        slowTxt("* " + quest[i] + " ", 60);
        if (questComplete[i])
            slowTxt("[Completed]", 60);
        System.out.println("");
    }
    System.out.println("");
}
// __________________________________________________  End of TBCS  __________________________________________________



// ____________________________________________________________________________________________________   End Of Function Junction   ____________________________________________________________________________________________________

}
